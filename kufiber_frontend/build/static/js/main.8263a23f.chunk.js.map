{"version":3,"sources":["components/bottom.js","components/loginpage.js","components/headbar.js","components/mainpage.js","components/add.js","components/fiberlist.js","components/searchandlist.js","components/editstation.js","components/addstation.js","components/map.js","components/productdetale.js","img/test1.jpg","components/editproduct.js","components/adjust.js","components/register.js","components/repairlist.js","App.js","reportWebVitals.js","index.js"],"names":["Bottom","Login","useState","setloginstatus","logusername","setlogusername","logpassword","setlogpassword","setregusername","setregpassword","history","useHistory","useEffect","gotlogin","fetch","then","res","json","data","message","push","pathname","className","Container","Row","Col","xs","Card","Header","as","Body","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","Button","onClick","method","headers","username","password","variant","Headbar","Navbar","bg","Brand","href","Nav","Link","inline","size","localStorage","clear","window","location","Main","border","Add","name","setname","status","setstatus","station1","setstation1","station2","setstation2","fibertype","setfibertype","distance","setdistance","core","setcore","use_core","setuse_core","notuse_core","setnotuse_core","date","setdate","person","setperson","repair","anyelse","setanyelse","station","setStation","console","log","InputGroup","Prepend","Text","FormControl","required","map","el","id","aria-label","confirm","blog","body","JSON","stringify","Filldata","product","setProduct","searchTerm","setsearchTerm","count","filter","v","toLowerCase","includes","length","Badge","Table","striped","bordered","hover","val","sort","a","b","eventId","_id","dataid","header","List","Search","Editstationfeed","useParams","mystation","setmyStation","defaultValue","ListGroup","Item","Addstation","setName","Map","path","lat","lng","render","defaultZoom","defaultCenter","options","strokeColor","React","Component","MapComponent","withScriptjs","withGoogleMap","googleMapURL","loadingElement","style","height","containerElement","width","mapElement","Datapage","setRepair","rdetale","setrdetale","rdate","setrdate","rid","setrid","oncontextmenu","Edit","getStation","getProduct","Adjust","aria-describedby","Check","label","Register","regusername","regpassword","Filldata2","RepairList","App","component","exact","FileUpload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8263a23f.chunk.js","sourcesContent":["import { Navbar,Nav,Form,Button,FormControl,Card,NavDropdown } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport './style.css';\r\n\r\nconst Bottom = () => {\r\n  return (\r\n    <div>\r\n      <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottom;\r\n","import {Form,Button,Card,Container,Row,Col,Nav} from 'react-bootstrap';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\nimport React, { useState, useEffect } from 'react';\r\n//import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\r\n  const [loginstatus, setloginstatus] = useState('');\r\n  const [logusername, setlogusername] = useState('');\r\n  const [logpassword, setlogpassword] = useState('');\r\n\r\n  const [regstatus, setregstatus] = useState('');\r\n  const [regusername, setregusername] = useState('');\r\n  const [regpassword, setregpassword] = useState('');\r\n\r\n  const history = useHistory()\r\n  \r\n  useEffect(() => {\r\n    gotlogin();\r\n  },[])\r\n\r\n  const gotlogin =()=>{\r\n      fetch(\"/login\")\r\n      .then(res => res.json())\r\n      .then((res)=>{\r\n        if (res.data.message === \"go\") {\r\n          history.push({\r\n            pathname : '/main'\r\n          })\r\n        }\r\n        else{\r\n          history.push({\r\n            pathname : '/login'\r\n          })\r\n        }\r\n        setloginstatus(res.data.message);\r\n      }\r\n      );\r\n  }\r\n\r\n  /*\r\n  const register =()=>{\r\n    Axios.post(\"/register\",{\r\n      username: regusername,\r\n      password: regpassword,\r\n    }).then((res)=>{\r\n      \r\n    });\r\n  }*/\r\n\r\n  const login =()=>{\r\n    /*Axios.post(\"/login\",{\r\n      username: logusername,\r\n      password: logpassword,\r\n    }).then((res)=>{\r\n      \r\n    });*/\r\n    fetch(\"/login\", {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      username: logusername,\r\n      password: logpassword,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n          <Container>\r\n          <br></br><br></br><br></br><br></br>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"7\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">{\"Admin Login\"}</Card.Header>\r\n            <Card.Body>\r\n              <form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  placeholder=\"Enter User\" \r\n                  onChange={(e)=>{setlogusername(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                  type=\"password\" \r\n                  placeholder=\"Password\" \r\n                  onChange={(e)=>{setlogpassword(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n\r\n              \r\n              <Button onClick={login} variant=\"success\" type=\"submit\">\r\n                login\r\n              </Button>\r\n            \r\n\r\n              </form>\r\n            </Card.Body>\r\n            </Card>\r\n            <br></br><br></br><br></br>\r\n            <Card>\r\n            <Card.Header as=\"h5\">{\"register\"}</Card.Header>\r\n            <Card.Body>\r\n              <form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  placeholder=\"Enter User\" \r\n                  onChange={(e)=>{setregusername(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                  type=\"password\" \r\n                  placeholder=\"Password\" \r\n                  onChange={(e)=>{setregpassword(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n\r\n              \r\n              <Button //onClick={register} \r\n              variant=\"success\" type=\"submit\">\r\n                Create\r\n              </Button>\r\n            \r\n\r\n              </form>\r\n            </Card.Body>\r\n            </Card> \r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n          \r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n","import { Navbar,Nav,Form,Button,FormControl,Card,NavDropdown } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Headbar = () => {\r\n  const history = useHistory()\r\n\r\n  /*const Gotlogout =()=>{\r\n    Axios.get(\"/logout\")\r\n    .then(\r\n      history.push({\r\n        pathname : '/login'\r\n      })\r\n    );\r\n  }*/\r\n\r\n  const Logout=()=> {\r\n    localStorage.clear();\r\n    window.location.href = '/login';\r\n}\r\n  \r\n  return (\r\n    <div className=\"App-main\">\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">KUfiber</Navbar.Brand>\r\n      <Nav className=\"mr-auto\" variant=\"pills\">\r\n      <Nav.Link href=\"/main\">About</Nav.Link>\r\n      <Nav.Link href=\"/list\">List</Nav.Link>\r\n      <Nav.Link href=\"/repairlist\">Repairlist</Nav.Link>\r\n      <Nav.Link href=\"/insert\"><Icon.PlusCircle/>{\" New\"}</Nav.Link>\r\n      <Nav.Link href=\"/addstation\"><Icon.PlusCircle/>{\" Addplace\"}</Nav.Link>\r\n      <Nav.Link href=\"/register\"><Icon.PlusCircle/>{\" register\"}</Nav.Link>\r\n      \r\n      </Nav>\r\n\r\n      <Form inline>\r\n      <Navbar.Brand></Navbar.Brand>\r\n      <Button variant=\"light\" \r\n              href=\"/login\" \r\n              size=\"sm\"\r\n              onClick={Logout}\r\n      >\r\n      <Icon.BoxArrowRight/></Button>\r\n      </Form>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Headbar;\r\n","import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport Bottom from './bottom';\r\nimport './style.css';\r\n//import Api from \"../api/api\";\r\n\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card border=\"success\" >\r\n            <Card.Header as=\"h5\">การเชื่อมต่อครือข่ายคอมพิวเตอร์ มหาวิทยาลัยเกษตรศาสตร์</Card.Header>\r\n            <Card.Body>\r\n                <p>- <Button size=\"sm\" variant=\"link\" href=\"http://conference.ku.ac.th/vcs/ku_map/KUmap_all.pdf\">แผนผัง</Button>มหาวิทยาลัยเกษตรศาสตร์ <Button size=\"sm\" variant=\"link\" href=\"http://conference.ku.ac.th/vcs/ku_map/KU_area.zip\">แบ่งตามพื้นที่</Button>\r\n                </p><p>- การเชื่อมต่อสายสัญญาณใยแก้วนำแสง (Fiber Optic) พร้อมแนวการเดินสายสัญญาณใยแก้วนำแสง ภายในวิทยาเขตบางเขนพัฒนาจากสายสัญญาณใยแก้วนำแสงเดิม\r\n                </p><p>- ป้ายชื่อสายสัญญาณใยแก้วนำแสง มก.\r\n                </p><p>- การเชื่อมต่ออุปกรณ์เครือข่ายคอมพิวเตอร์ แบบเก่า(old)และแบบใหม่ (new)\r\n                </p><p>- มาตรฐานระบบสายสัญญาณ UTP Cat6 และTIA ของสายสัญญาณใยแก้วนำแสง\r\n                </p><p>- การกำหนดคุณสมบัติสายสัญญาณใยแก้วนำแสง 3 เส้นทาง\r\n                </p><p>- การกำหนดคุณคุณสมับิตเฉพาะ สายสัญญาณใยแก้วนำแสง 5 เส้นทาง\r\n                </p><p>- ผังการเชื่อมต่อระบบ VoIP ของ มก. และคู่มือการใช้งาน IP Phone\r\n                </p><p>- คู่มือ EXFO ASX-110\r\n                </p><p>- ผลการตรวจสอบสายสัญญาณใยแก้วนำแสงด้วย OTDR ของโดยใช้โปรแกรม OTDR viewer มีดังต่อไปนี้\r\n                </p>\r\n            </Card.Body>\r\n            </Card>\r\n            <br/>\r\n            <Card border=\"success\" >\r\n            \r\n            <Card.Body>\r\n                <p>          มาตรฐานระบบสายสัญญาณ Category 6 หรือ Cat6 เป็นมาตรฐานที่ TIA ก็ได้ประกาศใช้มาตรฐาน Cat6 อย่างเป็นทางการเมื่อวันที่ 20 มิถุนายน 2002 ที่ผ่านมาภายใต้เอกสาร ANSI/TIA/EIA-568-B.2-1 เพื่อใช้กับระบบสายสัญญาณ ชนิดสายคู่ตีเกลียวแบบสมดุลย์ (Balanced Twisted-Pair Cabling Systems) ระดับ Category 6 มาตรฐานฉบับนี้นอกจากจะครอบคุลมหัวข้อกำหนดทางด้านสมรรถนะของระบบเหมือนมาตรฐานรุ่นก่อน ๆ แล้ว ยังได้รวมเอาข้อกำหนดของอุปกรณ์ต่อเชื่อม (Connecting Hardware) ในระดับชิ้นส่วน(Component) และการทดสอบ(Measurement/Test Procedure) ต่าง ๆ เข้าไปด้วย\r\n                          สาระสำคัญของมาตรฐาน ANSI/TIA/EIA-568-B.2-1 คือ\r\n                </p><p>          1. สามารถใช้กับระบบ Cat3, Cat5 และ Cat5e ที่มีอยู่เดิมได้ (Backward Compatibility)\r\n                </p><p>          2. เป็นมาตรฐานเปิดที่ทำให้ผลิตภัณฑ์ที่ผลิตจากผู้ผลิตต่าง ๆ กันสามารถทำงานร่วมกันได้(Open Standard)\r\n                </p><p>          3. RJ-45 Moddular Plug และJack จากหลากหลายผู้ผลิตสามารถเข้ากันหรือทำงานร่วมกันได้(Inter-Operabitility)\r\n                </p><p>          4. ข้อกำหนดสมบูรณ์ทั้งระบบครอบคลุมถึงการทดสอบชิ้นส่วน(Component),Patch Cord, Channels และ Permanent Link\r\n                </p><p>          5. มีความกว้างของช่องสัญญาณ(Bandwidth) เป็น 2 เท่าของระบบ Cat5e และมีค่า Power Sum Attenuation to Cross-Talk Ratio (PSACR) เป็นบวกถึง 200 MHz\r\n                </p><p>          6. ข้อกำหนดของชิ้นส่วนและสายเคเบิ้ลต้องได้รับการทดสอบถึง 250 MHz\r\n                </p><p>          หมายเหตุ วิธีการที่ใช้ทดสอบตามที่ระบุไว้ในมาตรฐาน ANSI/TIA/EIA-568-B.2-1 มีชื่อเรียกทางเทคนิคว่า \"De-Embedded Test Method\" เป็นวิธีการภาคบังคับตามที่มาตรฐานฉบับนี้ได้กำหนดไว้เพื่อใช้ในการทดสอบชิ้นส่วนอุปกรณ์ต่อเชื่อมในระดับ Cat6 ทุกตัว\r\n                </p>\r\n                \r\n            </Card.Body>\r\n            </Card>\r\n\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>      \r\n          </Container>\r\n          <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default Main;\r\n\r\nexport default Main;\r\n","import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Bottom from './bottom';\r\n\r\nconst Add = () => {\r\n  const [name, setname] = useState('');\r\n  const [status, setstatus] = useState('');\r\n  const [station1, setstation1] = useState('');\r\n  const [station2, setstation2] = useState('');\r\n  const [fibertype, setfibertype] = useState('');\r\n  const [distance, setdistance] = useState('');\r\n  const [core, setcore] = useState('');\r\n  const [use_core, setuse_core] = useState('');\r\n  const [notuse_core, setnotuse_core] = useState('');\r\n  const [date, setdate] = useState('');\r\n  const [person, setperson] = useState('');\r\n  const [repair, setrepair] = useState('');\r\n  const [anyelse, setanyelse] = useState('');\r\n  \r\n  const [station, setStation] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n  \r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n   \r\n    const blog = { name,status,station1,station2,fibertype,distance,\r\n      core,use_core,notuse_core,date,person,repair,anyelse,\r\n    }\r\n\r\n    fetch('/products', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">Add</Card.Header>\r\n            <Card.Body>\r\n            <form>\r\n                {/*name*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>รายการ</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={name}\r\n                  onChange={(e) => setname(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n\r\n                {/*status+type+insertplace*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>สถานะการใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={status}\r\n                  onChange={(e) => setstatus(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    <option>กำลังใช้งาน</option>\r\n                    <option>อยู่ระหว่างการดำเนินการ</option>\r\n                    <option>ยังไม่ดำเนินการ</option>\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ประเภทของสาย</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={fibertype}\r\n                  onChange={(e) => setfibertype(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    <option>Single Mode</option>\r\n                    <option>Multi Mode</option>\r\n                    <option>ไม่ระบุ</option>\r\n                </Form.Control>\r\n                <Button variant=\"success\" type=\"submit\" href=\"/addstation\">\r\n                เพิ่มตัวเลือกสถานที่ต้นทางหรือปลายทางเพิ่มเติม\r\n                </Button>\r\n                </InputGroup>\r\n\r\n                {/*s1+s2*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ต้นทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={station1}\r\n                  onChange={(e) => setstation1(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ปลายทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={station2}\r\n                  onChange={(e) => setstation2(e.target.value)}\r\n                  as=\"select\"\r\n                  placeholder=\"Password\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                </InputGroup>\r\n                \r\n                {/*core+distance*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ระยะทางโดยประมาณ(m)</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={distance}\r\n                  onChange={(e) => setdistance(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>จำนวน Core</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={core}\r\n                  onChange={(e) => setcore(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ถูกใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={use_core}\r\n                  onChange={(e) => setuse_core(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ยังไม่ได้ใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={notuse_core}\r\n                  onChange={(e) => setnotuse_core(e.target.value)}\r\n                />\r\n\r\n                </InputGroup>\r\n\r\n                {/*date+restname*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>วันที่ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={date}\r\n                  onChange={(e) => setdate(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ผู้ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={person}\r\n                  onChange={(e) => setperson(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n\r\n                {/*repair*/}\r\n                {/*<InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ประวัติการซ่อม</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  as=\"textarea\" \r\n                  aria-label=\"With textarea\" \r\n                  type=\"string\" \r\n                  required \r\n                  value={repair}\r\n                  onChange={(e) => setrepair(e.target.value)}\r\n                />\r\n                </InputGroup>*/}\r\n                {/*else*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ข้อมูลเพิ่มเติม</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  as=\"textarea\" \r\n                  aria-label=\"With textarea\" \r\n                  type=\"string\" \r\n                  required \r\n                  value={anyelse}\r\n                  onChange={(e) => setanyelse(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                <Button type=\"submit\" onClick={handleSubmit} href=\"/insert\">เพิ่มรายการ</Button>\r\n            </form>\r\n            \r\n            <br></br>\r\n          \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n\r\n    </Container>\r\n    <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import { InputGroup,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\n//import Datapage from \"./productdetale\"\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\n\r\n\r\nconst Filldata = () => {\r\n  const [product, setProduct] = useState([])\r\n  const history = useHistory();\r\n  const [searchTerm, setsearchTerm] = useState([])\r\n \r\n\r\n  useEffect(() => {\r\n    fetch('/products')\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  },[])\r\n\r\n  \r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/products/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n  \r\n  const see = (eventId) => {\r\n    history.push({\r\n      pathname: '/product/' + eventId\r\n    })\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editproduct/' + eventId\r\n    })\r\n  }\r\n\r\n  const count = product.filter((v)=>{\r\n    if (searchTerm == ''){\r\n      return v\r\n    }\r\n    else if(\r\n      (v.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      || (v.station1.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      || (v.station2.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    ){\r\n      return v\r\n    }\r\n\r\n  }).length\r\n  \r\n\r\n  return (\r\n      <div>\r\n            <Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"12\">\r\n            \r\n            <InputGroup size=\"sm\" className=\"mb-3\">\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">รายการ:</InputGroup.Text>\r\n                </InputGroup.Prepend >\r\n                <FormControl \r\n                  size=\"sm\"\r\n                  type=\"text\" \r\n                  placeholder = \"Search From Keyword\"\r\n                  onChange={(el)=>{\r\n                    setsearchTerm(el.target.value);\r\n                  }}\r\n                />\r\n                </InputGroup>\r\n                  \r\n                <Button variant=\"warning\" size=\"sm\">\r\n                ผลลัพธ์ทั้งหมด <Badge variant=\"light\">{count}</Badge> รายการ\r\n                <span className=\"sr-only\">unread messages</span>\r\n                </Button>\r\n                <br/>\r\n                  <br></br>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>รายการ</th>\r\n                            <th>ต้นทาง</th>\r\n                            <th>ปลายทาง</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                         {product.filter((val)=>{\r\n                            if (searchTerm == ''){\r\n                              return val\r\n                            }\r\n                            else if(\r\n                              (val.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                              || (val.station1.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                              || (val.station2.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                            ){\r\n                              return val\r\n                            }\r\n\r\n                          }).sort(function(a,b){\r\n                            a.name = a.name.toLowerCase();\r\n                            b.name = b.name.toLowerCase();\r\n                            if(a.name>b.name){\r\n                              return 1;}\r\n                            else if(a.name<b.name){\r\n                              return -1;}\r\n                            else {\r\n                              return 0;}\r\n \r\n                          }).map(el=> (\r\n                          <tr key={el.id}>\r\n                            <td> {el.name}{' '}<Badge variant=\"secondary\">{el.status}</Badge> </td>\r\n                            <td> {el.station1} </td>\r\n                            <td> {el.station2} </td>\r\n                            <td>\r\n                            <div className=\"center\">\r\n                            {' '}\r\n                            <Link  \r\n                                  onClick = { () => see(el._id) }\r\n                                  \r\n                            >\r\n                                  <Button type=\"submit\" variant=\"primary\" size=\"sm\" >\r\n                                  <Icon.ArrowDownRightCircle/>{' รายละเอียด'}\r\n                                  </Button>\r\n                            </Link>\r\n                            {' '}\r\n                            <Link  \r\n                                  onClick = { () => ed(el._id) }\r\n                                  target=\"_blank\"\r\n                            >\r\n                                  <Button type=\"submit\" variant=\"warning\"  size=\"sm\" >\r\n                                  <Icon.PencilSquare/>\r\n                                  </Button>\r\n                            </Link>\r\n                            {' '}\r\n                            <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/list\">\r\n                              <Icon.Trash/>\r\n                            </Button>\r\n                            </div>\r\n                            </td>\r\n                          </tr>)\r\n                          )}\r\n                          </tbody>\r\n                      </Table>\r\n                    <br></br>\r\n                  \r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n            </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst List = () => {\r\n  return (\r\n    \r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n          <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header>\r\n            <h3><Button variant=\"success\" size=\"sm\" href=\"/insert\"><Icon.PlusCircle/>{' NEW'}</Button>{' รายการเส้นใยนำแสงภายในมหาวิทยาลัย'}</h3></Card.Header>\r\n            <Card.Body>\r\n              \r\n              \r\n              <Filldata></Filldata>\r\n              \r\n                \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import { Table,Badge,InputGroup,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport Filldata from \"./fiberlist\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\nimport { useHistory  } from 'react-router-dom';\r\n\r\nconst Search = () => {\r\n\r\n  const [searchTerm, setsearchTerm] = useState([])\r\n  const [product, setProduct] = useState([])\r\n  const [station, setStation] = useState([])\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch('/products')\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  },[])\r\n\r\n  \r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/products/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n  \r\n  const see = (eventId) => {\r\n    history.push({\r\n      pathname: '/product/' + eventId\r\n    })\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editproduct/' + eventId\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">SEARCH</Card.Header>\r\n            <Card.Body>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>รายการ:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"text\" \r\n                  placeholder = \"Search From Keyword\"\r\n                  onChange={(el)=>{\r\n                    setsearchTerm(el.target.value);\r\n                  }}\r\n                />\r\n                </InputGroup>\r\n            </Card.Body>\r\n            </Card>\r\n            <br></br>\r\n            <Button variant=\"warning\">\r\n              ผลลัพธ์ทั้งหมด <Badge variant=\"light\">2</Badge> รายการ\r\n              <span className=\"sr-only\">unread messages</span>\r\n            </Button>\r\n\r\n          </Col>\r\n          <Col></Col>\r\n\r\n          </Row>\r\n    </Container>\r\n\r\n    <br></br>\r\n\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n          <br></br>\r\n\r\n          <Card>\r\n            <Card.Header>\r\n            <h3><Button variant=\"success\" size=\"sm\" href=\"/insert\"><Icon.PlusCircle/>{' NEW'}</Button>{' รายการเส้นใยนำแสงภายในมหาวิทยาลัย'}</h3></Card.Header>\r\n            <Card.Body>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>รายการ</th>\r\n                            <th>ต้นทาง</th>\r\n                            <th>ปลายทาง</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n            {product.filter((val)=>{\r\n              if (searchTerm == ''){\r\n                return val\r\n              }\r\n              else if(val.name.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                return val\r\n              }\r\n\r\n            }).map((el)=> {\r\n                    return (\r\n                      <tr key={el.id}>\r\n                      <td> {el.name}{' '}<Badge variant=\"secondary\">{el.status}</Badge> </td>\r\n                      <td> {el.station1} </td>\r\n                      <td> {el.station2} </td>\r\n                      <td>\r\n                      <div className=\"center\">\r\n                      {' '}\r\n                      <Link  \r\n                            onClick = { () => see(el._id) }\r\n                            \r\n                      >\r\n                            <Button type=\"submit\" variant=\"primary\" size=\"sm\" >\r\n                            <Icon.ArrowDownRightCircle/>{' รายละเอียด'}\r\n                            </Button>\r\n                      </Link>\r\n                      {' '}\r\n                      <Link  \r\n                            onClick = { () => ed(el._id) }\r\n                            target=\"_blank\"\r\n                      >\r\n                            <Button type=\"submit\" variant=\"warning\"  size=\"sm\" >\r\n                            <Icon.PencilSquare/>\r\n                            </Button>\r\n                      </Link>\r\n                      {' '}\r\n                      <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/list\">\r\n                        <Icon.Trash/>\r\n                      </Button>\r\n                      </div>\r\n                      </td>\r\n                    </tr>\r\n                    );\r\n            })}\r\n            </tbody>\r\n            </Table>\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n    </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import {Toast,ListGroup,Modal,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport Bottom from './bottom';\r\n\r\nconst Editstationfeed = () => {\r\n  const {id} = useParams();\r\n\r\n  const [mystation, setmyStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station/'+id)\r\n      .then(res => res.json())\r\n      .then(mystation => setmyStation(mystation))\r\n      console.log(mystation)\r\n  },[])\r\n  \r\n  const [station, setStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n  \r\n  const [name,setname] = useState(mystation.name);\r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n      const blog = {name}\r\n      fetch('/station/'+id, {\r\n        method: 'PATCH',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(blog)\r\n      }).then(() => {\r\n        console.log('new blog added');\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('are  you sure?'))\r\n    {\r\n      fetch('/station/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  /*const history = useHistory();\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editstation/' + eventId\r\n    })\r\n  }*/\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">แก้ไขชื่อสถานที่</Card.Header>\r\n            <Card.Body>\r\n                <p>\r\n                <form>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>station</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={mystation.name}\r\n                  onChange={(e) => setname(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                {' '}<Button type=\"submit\" onClick={handleSubmit} href=\"/addstation\" variant=\"warning\">แก้ไขรายการ</Button>\r\n                {' '}<Button type=\"submit\" href=\"/addstation\" variant=\"danger\">ยกเลิก</Button>\r\n                </form>\r\n                </p>\r\n                \r\n                \r\n                \r\n\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          \r\n            </Container>\r\n            <Bottom></Bottom>\r\n\r\n\r\n            {/*<Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"10\">\r\n                  <br></br>\r\n                  <ListGroup  as=\"ul\" >\r\n                  <div>{station.map( el=> (\r\n                  <span key={el.id}>\r\n                  <ListGroup.Item  as=\"ul\">\r\n                  <Row>\r\n                  <Col xs=\"10\"><Icon.GeoAltFill/>{\" \"}{el.name}</Col>\r\n                  <Col xs=\"2\">\r\n                    <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/addstation\">\r\n                      <Icon.Trash/>\r\n                    </Button>{' '}\r\n\r\n                  \r\n                    <Button type=\"submit\" variant=\"warning\"  size=\"sm\" href={'/editstation/'+id}>\r\n                    <Icon.PencilSquare/>\r\n                    </Button>\r\n                  \r\n\r\n                  </Col>\r\n                  </Row>\r\n                  </ListGroup.Item>\r\n                  \r\n                  </span>\r\n                  ))}\r\n                  </div>\r\n                  </ListGroup>\r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n                  </Container>*/}\r\n                \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editstationfeed;\r\n","import {Toast,ListGroup,Modal,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport Bottom from './bottom';\r\n\r\nconst Filldata = () => {\r\n  const history = useHistory();\r\n  const [station, setStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('are  you sure?'))\r\n    {\r\n      fetch('/station/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editstation/' + eventId\r\n    })\r\n  }\r\n \r\n\r\n  return (\r\n      <div>\r\n            <Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"10\">\r\n                  <br></br>\r\n                  <ListGroup  as=\"ul\" >\r\n                  <div>{station.sort(function(a,b){\r\n                            a.name = a.name.toLowerCase();\r\n                            b.name = b.name.toLowerCase();\r\n                            if(a.name>b.name){\r\n                              return 1;}\r\n                            else if(a.name<b.name){\r\n                              return -1;}\r\n                            else {\r\n                              return 0;}\r\n \r\n                          }).map( el=> (\r\n                  <span key={el.id}>\r\n                  <ListGroup.Item  as=\"ul\">\r\n                  <Row>\r\n                  <Col xs=\"10\"><Icon.GeoAltFill/>{\" \"}{el.name}</Col>\r\n                  <Col xs=\"2\">\r\n                    <div className=\"right\">\r\n                    <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/addstation\">\r\n                      <Icon.Trash/>\r\n                    </Button>{' '}\r\n                    <Link  onClick = {()=>ed(el._id)}>\r\n                        <Button type=\"submit\" variant=\"warning\"  size=\"sm\" >\r\n                        <Icon.PencilSquare/>\r\n                        </Button>\r\n                    </Link>\r\n                    </div>\r\n                  </Col>\r\n                  </Row>\r\n                  </ListGroup.Item>\r\n                  \r\n                  </span>\r\n                  ))}\r\n                  </div>\r\n                  </ListGroup>\r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n            </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Addstation = () => {\r\n  \r\n  const [name, setName] = useState('');\r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n   \r\n    const blog = { name };\r\n\r\n    fetch('localhost:9001/station', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"10\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">เพิ่มสถานที่</Card.Header>\r\n            <Card.Body>\r\n                \r\n                <form>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>station</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                <Button variant=\"warning\" type=\"submit\" onClick={handleSubmit} href=\"/addstation\">เพิ่ม</Button>\r\n                {' '}<Button type=\"submit\" \r\n                            variant=\"dark\"\r\n                            href=\"https://www.google.co.th/maps/place/%E0%B8%A1.%E0%B9%80%E0%B8%81%E0%B8%A9%E0%B8%95%E0%B8%A3%E0%B8%A8%E0%B8%B2%E0%B8%AA%E0%B8%95%E0%B8%A3%E0%B9%8C+%E0%B8%9A%E0%B8%B2%E0%B8%87%E0%B9%80%E0%B8%82%E0%B8%99/@13.8434899,100.5717821,15.85z/data=!4m9!1m2!2m1!1z4Lih4Lir4Liy4Lin4Li04LiX4Lii4Liy4Lil4Lix4Lii4LmA4LiB4Lip4LiV4Lij4Lio4Liy4Liq4LiV4Lij4LmMIOC4p-C4tOC4l-C4ouC4suC5gOC4guC4lQ!3m5!1s0x30e29d1e111be769:0x4332e8cd6aec8c31!8m2!3d13.8484754!4d100.5723925!15sClvguKHguKvguLLguKfguLTguJfguKLguLLguKXguLHguKLguYDguIHguKnguJXguKPguKjguLLguKrguJXguKPguYwg4Lin4Li04LiX4Lii4Liy4LmA4LiC4LiVIgOIAQGSAQZzY2hvb2w\"  \r\n                             >\r\n                        <Icon.MapFill/>{\" Google Map\"}\r\n                </Button>\r\n\r\n                </form>\r\n\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n    <Filldata></Filldata>\r\n    </Container>\r\n    <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addstation;\r\n","import React from \"react\";\r\nimport { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  Polygon\r\n} from \"react-google-maps\";\r\nimport Headbar from './headbar';\r\n\r\nclass Map extends React.Component {\r\n  path = [\r\n    { lat: 13.847039, lng: 100.5694708 },\r\n    { lat: 13.8470245, lng: 100.5698754 }\r\n  ];\r\n  render = () => {\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={16} \r\n        defaultCenter={{ lat: 13.847039, lng: 100.5694708 }}\r\n      >\r\n        <Polygon path={this.path} options={{ strokeColor: \"#FF0000 \" }} />\r\n      </GoogleMap>\r\n    );\r\n  };\r\n}\r\n\r\nconst MapComponent = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default () => (\r\n  <div>\r\n  <Headbar></Headbar>\r\n  <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">Map</Card.Header>\r\n            <Card.Body>\r\n            <MapComponent\r\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\r\n                loadingElement={<div style={{ height: `100%` }} />}\r\n                containerElement={<div style={{ height: `400px`, width: \"500px\" }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>      \r\n        </Container>\r\n  </div>\r\n);\r\n","import { InputGroup,Accordion,CardGroup,Carousel,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport Headbar from './headbar';\r\nimport Bottom from './bottom';\r\nimport UploadFiles from './FileUpload';\r\nimport { Link } from 'react-router-dom';\r\nimport test1 from '../img/test1.jpg';\r\nimport test2 from '../img/test2.jpg';\r\n\r\nconst Datapage = () => {\r\n      \r\n  const history = useHistory();\r\n  const {id} = useParams();\r\n  const [product,setProduct] = useState([])\r\n  const [repair,setRepair] = useState([])\r\n\r\n  useEffect(() => {\r\n      fetch('/products/'+id)\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    fetch('/repair')\r\n    .then(res => res.json())\r\n    .then(repair => setRepair(repair))\r\n    console.log(product)\r\n  },[])\r\n\r\n                               \r\n  const [rdetale,setrdetale] = useState('');\r\n  const [rdate,setrdate] = useState('');\r\n  const [rid,setrid] = useState(id);\r\n\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n    const blog = {rdetale,rdate,rid}\r\n    fetch('/repair', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/products/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  const Delr = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/repair/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editproduct/' + eventId\r\n    })\r\n  }\r\n\r\n  return (\r\n        <div className=\"App-main\">\r\n        <Headbar></Headbar>\r\n        <br></br>     \r\n        \r\n        <Container>\r\n        <Row>\r\n        <Col></Col>\r\n        <Col xs=\"12\">\r\n            <Card border=\"success\" >\r\n            <Card.Header as=\"h5\">\r\n              <Badge variant=\"success\">{product ? product.status :null}</Badge>{' '}{product ? product.name : null}{' '}\r\n              <p className=\"right\">\r\n              {' '}\r\n              <Link onClick = {()=>ed(id)} target=\"_blank\">\r\n                <Button type=\"submit\" variant=\"warning\"  size=\"sm\" ><Icon.PencilSquare/></Button>\r\n              </Link>{' '}\r\n              <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(id)} href=\"/list\"><Icon.Trash/></Button>\r\n              </p>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <p>       <Badge variant=\"warning\">{'ต้นทาง '}</Badge>{'  :  '}{product ? product.station1 :null}{' '}\r\n                          <Badge variant=\"warning\">{'ปลายทาง '}</Badge>{'  :  '}{product ? product.station2 :null}{' '}\r\n                          <Badge variant=\"success\">{'สถานะ'}</Badge>{'  :  '}{product ? product.status :null}\r\n                </p><p>   <Badge variant=\"dark\">{'ชนิดของสาย '}</Badge>{'  :  '}{product ? product.fibertype :null}{' '}\r\n                          <Badge variant=\"dark\">{'ระยะทางโดยประมาณ '}</Badge>{'  :  '}{product ? product.notuse_core :null}{' เมตร '}{' '}\r\n                          <Badge variant=\"dark\">{'จำนวน core '}</Badge>{'  :  '}{product ? product.core :null}{' core '}{' '}\r\n                          <Badge variant=\"dark\">{'ใช้งานไปแล้ว '}</Badge>{'  :  '}{product ? product.use_core :null}{' core '}{' '}\r\n                          <Badge variant=\"dark\">{'คงเหลือที่ว่าง '}</Badge>{'  :  '}{product ? product.notuse_core :null}{' core '}{' '}\r\n                </p><p>   <Badge variant=\"dark\">{'วันที่'}</Badge>{'  :  '}{product ? product.date :null}{' '}\r\n                          <Badge variant=\"dark\">{'ผู้ดำเนินการ '}</Badge>{'  :  '}{product ? product.person :null}{' '}\r\n                </p>\r\n            </Card.Body>\r\n            </Card>\r\n            <br/>\r\n     \r\n                        <Card border=\"success\" >\r\n                        <Card.Header as=\"h5\">\r\n                          ข้อมูลการซ่อมแซมและการบำรุงรักษา\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n\r\n\r\n                        <form>\r\n                        <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend size=\"sm\">\r\n                        <InputGroup.Text size=\"sm\">id</InputGroup.Text>\r\n                        </InputGroup.Prepend >\r\n                        <FormControl \r\n                          type=\"string\" \r\n                          required \r\n                          value={rid}\r\n                          size=\"sm\"\r\n                          oncontextmenu={(e) => setrid(e.target.value)}\r\n                        />\r\n                        </InputGroup>\r\n                        <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend size=\"sm\">\r\n                        <InputGroup.Text size=\"sm\">รายการ</InputGroup.Text>\r\n                        </InputGroup.Prepend >\r\n                        <FormControl \r\n                          type=\"string\" \r\n                          required \r\n                          value={rdetale}\r\n                          size=\"sm\"\r\n                          onChange={(e) => setrdetale(e.target.value)}\r\n\r\n                        />\r\n                        <InputGroup.Prepend size=\"sm\">\r\n                        <InputGroup.Text size=\"sm\">วันที่ดำเนินการ</InputGroup.Text>\r\n                        </InputGroup.Prepend >\r\n                        <FormControl \r\n                          size=\"sm\"\r\n                          type=\"string\" \r\n                          required \r\n                          value={rdate}\r\n                          onChange={(e) => setrdate(e.target.value)}\r\n                        />\r\n                        <Button size=\"sm\" type=\"submit\" variant=\"success\" onClick={handleSubmit}>เพิ่ม</Button>\r\n                        </InputGroup>\r\n                        </form>\r\n                        <Table striped bordered hover size=\"sm\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"center\">date</th>\r\n                              <th className=\"center\">รายการซ่อม</th>\r\n                              <th className=\"center\"></th>\r\n                              \r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          \r\n                            {repair.filter((val)=>{\r\n                              if (val.rid == id){\r\n                                return val\r\n                            }\r\n                            }).map((el)=>(\r\n                                <tr key={el.id}>\r\n                                {' '}\r\n                                <th className=\"center\">{el.rdate}</th>\r\n                                <th>{' '}{el.rdetale}</th>\r\n                                <th>\r\n                                  <div>\r\n                                  <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Delr(el._id)} href={\"/product/\"+el.rid}><Icon.Trash/></Button>\r\n                                  </div>\r\n                                </th>\r\n                                </tr>\r\n\r\n                            ))}\r\n                          \r\n                          </tbody>\r\n                        </Table>\r\n\r\n                        </Card.Body>\r\n                        </Card>\r\n\r\n                        <br/>\r\n\r\n                        <Card border=\"success\" >\r\n                        <Card.Header as=\"h5\">\r\n                          หมายเหตุ\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                        {product ? product.anyelse :null}\r\n                              {/*<form>\r\n                              <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text>วันที่ดำเนินงาน</InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl \r\n                                type=\"string\" \r\n                                required \r\n                                value={imgid}\r\n                                onChange={(e) => setimgid(e.target.value)}\r\n                              />\r\n                              <Form.Group controlId=\"formFileSm\" className=\"mb-3\">\r\n                              <Form.Label>Small file input example</Form.Label>\r\n                              <Form.Control \r\n                                type=\"file\" \r\n                                size=\"sm\" \r\n                                name=\"images\" \r\n                                id=\"formFile\" \r\n                                multiple\r\n                              />\r\n                              \r\n                              </Form.Group>\r\n                              </InputGroup>\r\n                              <Button type=\"submit\" onClick={handleSubmit}>เพิ่มรายการ</Button>\r\n                              </form>\r\n                              <div>\r\n                              <form>\r\n                              <input\r\n                                type=\"string\" \r\n                                required \r\n                                value={imgid}\r\n                                onChange={(e) => setimgid(e.target.value)}\r\n                              />\r\n                              <input type=\"file\" class=\"form-control\" name=\"images\" id=\"formFile\" multiple/>\r\n                              <Button type=\"submit\" class=\"btn btn-warning\" value=\"Upload Images\" onClick={handleSubmit} />\r\n                              \r\n                             \r\n                              </form>\r\n                              </div>*/}\r\n                            \r\n                        </Card.Body>\r\n                        </Card>\r\n            \r\n\r\n            \r\n            \r\n            <br/>\r\n            {/*<CardGroup>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\" />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            </CardGroup>\r\n            */}\r\n\r\n            \r\n          \r\n\r\n        </Col>\r\n        <Col></Col>\r\n         </Row>\r\n        </Container>\r\n        <Bottom></Bottom>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Datapage;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/test1.d7aacead.jpg\";","import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport Bottom from './bottom';\r\n\r\nconst Edit = () => {\r\n  \r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    getStation();\r\n    getProduct();\r\n  }, [])\r\n\r\n  const [station,setStation] = useState([])\r\n  const [product,setProduct] = useState([])\r\n  const [name,setname] = useState(product.name);\r\n  const [status,setstatus] = useState(product.status);\r\n  const [station1,setstation1] = useState(product.station1);\r\n  const [station2,setstation2] = useState(product.station2);\r\n  const [fibertype,setfibertype] = useState(product.fibertype);\r\n  const [distance,setdistance] = useState(product.distance);\r\n  const [core,setcore] = useState(product.core);\r\n  const [use_core,setuse_core] = useState(product.use_core);\r\n  const [notuse_core,setnotuse_core] = useState(product.notuse_core);\r\n  const [date,setdate] = useState(product.date);\r\n  const [person,setperson] = useState(product.person);\r\n  const [anyelse,setanyelse] = useState(product.anyelse);\r\n\r\n  const getStation = () => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  }\r\n\r\n  const getProduct = () => {\r\n    fetch('/products/'+id)\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  }\r\n  \r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n    const blog = { name,status,station1,station2,fibertype,distance,\r\n        core,use_core,notuse_core,date,person,anyelse,\r\n    }\r\n    fetch('/products/'+id, {\r\n      method: 'PATCH',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">Edit</Card.Header>\r\n            <Card.Body>\r\n               \r\n            <form>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>รายการ</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.name}\r\n                  onChange={(e) => setname(e.target.value)}\r\n                />     \r\n                </InputGroup>\r\n                {/*status+type+insertplace*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>สถานะการใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.status}\r\n                  onChange={(e) => setstatus(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>{product.status}</option>\r\n                    <option>กำลังใช้งาน</option>\r\n                    <option>อยู่ระหว่างการดำเนินการ</option>\r\n                    <option>ยังไม่ดำเนินการ</option>\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ประเภทของสาย</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.fibertype}\r\n                  onChange={(e) => setfibertype(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>{product.fibertype}</option>\r\n                    \r\n                    <option>Single Mode</option>\r\n                    <option>Multi Mode</option>\r\n                    <option>ไม่ระบุ</option>\r\n                </Form.Control>\r\n                <Button variant=\"success\" type=\"submit\" href=\"/addstation\">\r\n                เพิ่มตัวเลือกสถานที่ต้นทางหรือปลายทางเพิ่มเติม\r\n                </Button>\r\n                </InputGroup>\r\n\r\n                {/*s1+s2*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ต้นทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.station1}\r\n                  onChange={(e) => setstation1(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>{product.station1}</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ปลายทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.station2}\r\n                  onChange={(e) => setstation2(e.target.value)}\r\n                  as=\"select\"\r\n                  placeholder=\"Password\"\r\n                  >\r\n                    <option>{product.station2}</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                </InputGroup>\r\n                \r\n                {/*core+distance*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ระยะทางโดยประมาณ(m)</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.distance}\r\n                  onChange={(e) => setdistance(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>จำนวน Core</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.core}\r\n                  onChange={(e) => setcore(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ถูกใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.use_core}\r\n                  onChange={(e) => setuse_core(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ยังไม่ได้ใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.notuse_core}\r\n                  onChange={(e) => setnotuse_core(e.target.value)}\r\n                />\r\n\r\n                </InputGroup>\r\n\r\n                {/*date+restname*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>วันที่ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.date}\r\n                  onChange={(e) => setdate(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ผู้ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.person}\r\n                  onChange={(e) => setperson(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n\r\n                {/*else*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ข้อมูลเพิ่มเติม</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  as=\"textarea\" \r\n                  aria-label=\"With textarea\" \r\n                  type=\"string\" \r\n                  required\r\n                  defaultValue={product.anyelse}\r\n                  onChange={(e) => setanyelse(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                {/*<button onClick={updateUser} >Update User</button> */}\r\n                \r\n                <Button type=\"submit\" onClick={handleSubmit} href=\"/list\">แก้ไขรายการ</Button>\r\n            </form>\r\n            \r\n            <br></br>\r\n          \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n    </Container>\r\n    <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\n\r\nconst Adjust = () => {\r\n  return (\r\n    <div>\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">แก้ไขข้อมูล</Card.Header>\r\n            <Card.Body>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">รายการ</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>เส้นทางผ่าน 1</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                    <option>อาคารระพีสาคริก สำนักบริหารการศึกษา</option>\r\n                    <option>อาคาร 15 คณะวิศวกรรมศาสตร์</option>\r\n                    <option>สำนักการกีฬา</option>\r\n                    <option>อาคารสารนิเทศ 50 ปี สำนักงานอธิการ มก.</option>\r\n                    <option>อาคารเรียนและปฏิบัติการทางด้านวิทยาศาสตร์กายภาพ คณะวิทยาศาสตร์</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>เส้นทางผ่าน 2</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                    <option>อาคารระพีสาคริก สำนักบริหารการศึกษา</option>\r\n                    <option>อาคาร 15 คณะวิศวกรรมศาสตร์</option>\r\n                    <option>สำนักการกีฬา</option>\r\n                    <option>อาคารสารนิเทศ 50 ปี สำนักงานอธิการ มก.</option>\r\n                    <option>อาคารเรียนและปฏิบัติการทางด้านวิทยาศาสตร์กายภาพ คณะวิทยาศาสตร์</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form>\r\n                {['radio'].map((type) => (\r\n                  <div key={`inline-${type}`} className=\"mb-3\">\r\n                    {\"ชนิดของสาย \"}\r\n                    <Form.Check inline label=\"SM\" type={type} id={`inline-${type}-1`} />\r\n                    <Form.Check inline label=\"MM\" type={type} id={`inline-${type}-2`} />\r\n                  </div>\r\n                ))}\r\n            </Form>\r\n            \r\n            <Row>\r\n            <Col>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">จำนวน core</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            </Col>\r\n            <Col>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">ใช้จริง</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            </Col>\r\n            <Col>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">สำรอง</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            </Col>\r\n            </Row>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">หมายเหตุ</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            \r\n            <InputGroup>\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text>ข้อมูลเพิ่มเติม</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl as=\"textarea\" aria-label=\"With textarea\" />\r\n            </InputGroup>\r\n\r\n            <br></br>\r\n            <Button variant=\"danger\" type=\"submit\" href=\"/main\">\r\n                แก้ไขข้อมูล\r\n            </Button>\r\n            \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adjust;\r\n","import {Form,Button,Card,Container,Row,Col,Nav} from 'react-bootstrap';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\nimport React, { useState, useEffect } from 'react';\r\n//import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Headbar from './headbar';\r\n\r\nconst Register = () => {\r\n\r\n  const [regstatus, setregstatus] = useState('');\r\n  const [regusername, setregusername] = useState('');\r\n  const [regpassword, setregpassword] = useState('');\r\n\r\n  const history = useHistory()\r\n\r\n  const register =()=>{\r\n    fetch(\"/register\", {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      username: regusername,\r\n      password: regpassword,\r\n    })\r\n    \r\n    /*axios.post(\"/register\",{\r\n      username: regusername,\r\n      password: regpassword,\r\n    }).then((res)=>{\r\n      \r\n    });\r\n    */\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n          <Headbar></Headbar>\r\n          <Container>\r\n          <br></br><br></br><br></br><br></br>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"7\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">{\"register\"}</Card.Header>\r\n            <Card.Body>\r\n              <form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  placeholder=\"Enter User\" \r\n                  onChange={(e)=>{setregusername(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                  type=\"password\" \r\n                  placeholder=\"Password\" \r\n                  onChange={(e)=>{setregpassword(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n\r\n              \r\n              <Button onClick={register} variant=\"success\" type=\"submit\" href=\"/list\">\r\n                Create\r\n              </Button>\r\n            \r\n\r\n              </form>\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n          \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { InputGroup,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\n\r\n\r\nconst Filldata2 = () => {\r\n  const [product, setProduct] = useState([])\r\n  const history = useHistory();\r\n  const [searchTerm, setsearchTerm] = useState([])\r\n  const [repair, setRepair] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch('/repair')\r\n      .then(res => res.json())\r\n      .then(repair => setRepair(repair))\r\n      console.log(repair)\r\n  },[])\r\n\r\n  /*const pustproduct1 =(pid)=>{\r\n    fetch('/products/'+pid)\r\n        .then(res => res.json())\r\n        .then(product => setProduct(product))\r\n    return(\r\n      <div>{product.station1}</div>\r\n    );\r\n  }\r\n\r\n  const pustproduct2 =(pid)=>{\r\n      fetch('/products/'+pid)\r\n          .then(res => res.json())\r\n          .then(product => setProduct(product))\r\n    return(\r\n      <div>{product.station2}</div>\r\n    );\r\n  }*/\r\n\r\n  const count = repair.filter((v)=>{\r\n    if (searchTerm == ''){\r\n      return v\r\n    }\r\n    else if(v.rdetale.toLowerCase().includes(searchTerm.toLowerCase())){\r\n      return v\r\n    }\r\n  }).length\r\n  \r\n\r\n  return (\r\n      <div>\r\n            <Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"12\">\r\n            \r\n            <InputGroup size=\"sm\" className=\"mb-3\">\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">รายการซ่อม:</InputGroup.Text>\r\n                </InputGroup.Prepend >\r\n                <FormControl \r\n                  size=\"sm\"\r\n                  type=\"string\" \r\n                  placeholder = \"Search From Keyword\"\r\n                  onChange={(el)=>{\r\n                    setsearchTerm(el.target.value);\r\n                  }}\r\n                />\r\n                </InputGroup>\r\n                  \r\n                <Button variant=\"warning\" size=\"sm\">\r\n                ผลลัพธ์ทั้งหมด <Badge variant=\"light\">{count}</Badge> รายการ\r\n                <span className=\"sr-only\">unread messages</span>\r\n                </Button>\r\n                <br/>\r\n                  <br></br>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>รายการ</th>\r\n                            <th>วันที่ดำเนินการ</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                         {repair.filter((val)=>{\r\n                            if (searchTerm == ''){\r\n                              return val\r\n                            }\r\n                            else if(\r\n                              (val.rdetale.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                            ){\r\n                              return val\r\n                            }\r\n\r\n                          }).sort(function(a,b){\r\n                            a.rdetale = a.rdetale.toLowerCase();\r\n                            b.rdetale = b.rdetale.toLowerCase();\r\n                            if(a.rdetale>b.rdetale){\r\n                              return 1;}\r\n                            else if(a.rdetale<b.rdetale){\r\n                              return -1;}\r\n                            else {\r\n                              return 0;}\r\n                          }).map(el=> (\r\n                          <tr key={el.id}>\r\n                            <td> {el.rdetale}</td>\r\n                            <td> {el.rdate} </td>\r\n                            <td> \r\n                            <div>\r\n                            {' '}\r\n                            <Button size=\"sm\" variant=\"dark\" type=\"submit\" href={\"/product/\"+el.rid}>\r\n                            <Icon.ArrowDownRightCircle/>{' รายละเอียด'}\r\n                            </Button>\r\n                            \r\n                            </div>\r\n                            </td>\r\n                          </tr>)\r\n                          )}\r\n                          </tbody>\r\n                      </Table>\r\n                    <br></br>\r\n                  \r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n            </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst RepairList = () => {\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n          <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header>\r\n            <h3>{' รายการซ่อมเส้นใยนำแสงภายในมหาวิทยาลัย'}</h3></Card.Header>\r\n            <Card.Body>\r\n              <Filldata2></Filldata2>      \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepairList;\r\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./components/loginpage\"\nimport Main from \"./components/mainpage\"\nimport Add from \"./components/add\"\nimport Search from \"./components/searchandlist\"\nimport Editstationfeed from \"./components/editstation\"\nimport Addstation from \"./components/addstation\"\nimport Map from \"./components/map\"\nimport List from \"./components/fiberlist\"\nimport Datapage from \"./components/productdetale\"\nimport Edit from \"./components/editproduct\"\nimport Adjust from \"./components/adjust\";\nimport FileUpload from \"./components/FileUpload\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Register from './components/register';\nimport RepairList from './components/repairlist';\n\n\nconst App = () => {\n    \n    return (\n        <main>\n            <Switch>\n                <Route path=\"/login\" component={Login} exact />\n                <Route path=\"/main\" component={Main} />\n                <Route path=\"/insert\" component={Add} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/adjust\" component={Adjust} />\n                <Route path=\"/addstation\" component={Addstation} />\n                <Route path=\"/map\" component={Map} />\n                <Route path=\"/list\" component={List} />\n                <Route path=\"/product/:id\" component={Datapage}/>\n                <Route path=\"/editproduct/:id\" component={Edit}/>\n                <Route path=\"/editstation/:id\" component={Editstationfeed}/>\n                <Route path=\"/upload\" component={FileUpload}/>\n                <Route path=\"/register\" component={Register}/>\n                <Route path=\"/repairlist\" component={RepairList}/>\n            </Switch>\n        </main>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}