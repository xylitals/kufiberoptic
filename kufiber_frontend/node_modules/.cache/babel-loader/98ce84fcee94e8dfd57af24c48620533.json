{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fiberproj\\\\kufiber_frontend\\\\src\\\\components\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UploadService from \"./FileUploadService\";\nimport { InputGroup, Accordion, CardGroup, Carousel, ListGroup, Table, Badge, Navbar, Nav, Form, Button, FormControl, Card, Container, Row, Col, DropdownButton, Dropdown, Select, Option, Jumbotron } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectFile = event => {\n  setSelectedFiles(event.target.files);\n};\n\nconst UploadFiles = () => {\n  _s();\n\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [fileInfos, setFileInfos] = useState([]);\n\n  const selectFile = event => {\n    setSelectedFiles(event.target.files);\n  };\n\n  useEffect(() => {\n    UploadService.getFiles().then(response => {\n      setFileInfos(response.data);\n    });\n  }, []);\n\n  const upload = () => {\n    let currentFile = selectedFiles[0];\n    setProgress(0);\n    setCurrentFile(currentFile);\n    UploadService.upload(currentFile, event => {\n      setProgress(Math.round(100 * event.loaded / event.total));\n    }).then(response => {\n      setMessage(response.data.message);\n      return UploadService.getFiles();\n    }).then(files => {\n      setFileInfos(files.data);\n    }).catch(() => {\n      setProgress(0);\n      setMessage(\"Could not upload the file!\");\n      setCurrentFile(undefined);\n    });\n    setSelectedFiles(undefined);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar progress-bar-info progress-bar-striped\",\n        role: \"progressbar\",\n        \"aria-valuenow\": progress,\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: progress + \"%\"\n        },\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"btn btn-default\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.selectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      disabled: !selectedFiles,\n      onClick: this.upload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-light\",\n      role: \"alert\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"List of Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: fileInfos && fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: file.url,\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UploadFiles, \"rp6w94naj8+7ysk2gK1qQ2/xWj4=\");\n\n_c = UploadFiles;\nexport default UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"sources":["C:/Users/user/Desktop/fiberproj/kufiber_frontend/src/components/FileUpload.js"],"names":["React","useState","useEffect","UploadService","InputGroup","Accordion","CardGroup","Carousel","ListGroup","Table","Badge","Navbar","Nav","Form","Button","FormControl","Card","Container","Row","Col","DropdownButton","Dropdown","Select","Option","Jumbotron","selectFile","event","setSelectedFiles","target","files","UploadFiles","selectedFiles","undefined","currentFile","setCurrentFile","progress","setProgress","message","setMessage","fileInfos","setFileInfos","getFiles","then","response","data","upload","Math","round","loaded","total","catch","width","map","file","index","url","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UploadService from \"./FileUploadService\";\r\nimport { InputGroup,Accordion,CardGroup,Carousel,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\n\r\nconst selectFile = (event) => {\r\n  setSelectedFiles(event.target.files);\r\n};\r\n\r\n\r\nconst UploadFiles = () => {\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\r\n    const [currentFile, setCurrentFile] = useState(undefined);\r\n    const [progress, setProgress] = useState(0);\r\n    const [message, setMessage] = useState(\"\");\r\n  \r\n    const [fileInfos, setFileInfos] = useState([]);\r\n\r\n    const selectFile = (event) => {\r\n        setSelectedFiles(event.target.files);\r\n      };\r\n\r\n    useEffect(() => {\r\n        UploadService.getFiles().then((response) => {\r\n          setFileInfos(response.data);\r\n        });\r\n      }, []);\r\n\r\n    const upload = () => {\r\n        let currentFile = selectedFiles[0];\r\n    \r\n        setProgress(0);\r\n        setCurrentFile(currentFile);\r\n    \r\n        UploadService.upload(currentFile, (event) => {\r\n          setProgress(Math.round((100 * event.loaded) / event.total));\r\n        })\r\n          .then((response) => {\r\n            setMessage(response.data.message);\r\n            return UploadService.getFiles();\r\n          })\r\n          .then((files) => {\r\n            setFileInfos(files.data);\r\n          })\r\n          .catch(() => {\r\n            setProgress(0);\r\n            setMessage(\"Could not upload the file!\");\r\n            setCurrentFile(undefined);\r\n          });\r\n    \r\n        setSelectedFiles(undefined);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      {currentFile && (\r\n        <div className=\"progress\">\r\n          <div\r\n            className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            aria-valuenow={progress}\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            style={{ width: progress + \"%\" }}\r\n          >\r\n            {progress}%\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <label className=\"btn btn-default\">\r\n        <input type=\"file\" onChange={this.selectFile} />\r\n      </label>\r\n\r\n      <button className=\"btn btn-success\"\r\n        disabled={!selectedFiles}\r\n        onClick={this.upload}\r\n      >\r\n        Upload\r\n      </button>\r\n\r\n      <div className=\"alert alert-light\" role=\"alert\">\r\n        {message}\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">List of Files</div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {fileInfos &&\r\n            fileInfos.map((file, index) => (\r\n              <li className=\"list-group-item\" key={index}>\r\n                <a href={file.url}>{file.name}</a>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default UploadFiles;"]},"metadata":{},"sourceType":"module"}