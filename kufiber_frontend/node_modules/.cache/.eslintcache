[{"/usr/app/src/index.js":"1","/usr/app/src/App.js":"2","/usr/app/src/reportWebVitals.js":"3","/usr/app/src/components/editstation.js":"4","/usr/app/src/components/searchandlist.js":"5","/usr/app/src/components/loginpage.js":"6","/usr/app/src/components/mainpage.js":"7","/usr/app/src/components/fiberlist.js":"8","/usr/app/src/components/map.js":"9","/usr/app/src/components/addstation.js":"10","/usr/app/src/components/FileUpload.js":"11","/usr/app/src/components/register.js":"12","/usr/app/src/components/productdetale.js":"13","/usr/app/src/components/adjust.js":"14","/usr/app/src/components/repairlist.js":"15","/usr/app/src/components/editproduct.js":"16","/usr/app/src/components/hello.js":"17","/usr/app/src/components/add.js":"18","/usr/app/src/components/headbar.js":"19","/usr/app/src/components/bottom.js":"20"},{"size":592,"mtime":1619562107178,"results":"21","hashOfConfig":"22"},{"size":1876,"mtime":1626208548676,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1618582789567,"results":"24","hashOfConfig":"22"},{"size":4279,"mtime":1623232905042,"results":"25","hashOfConfig":"22"},{"size":5491,"mtime":1622579334815,"results":"26","hashOfConfig":"22"},{"size":4096,"mtime":1626208511746,"results":"27","hashOfConfig":"22"},{"size":7175,"mtime":1625777366464,"results":"28","hashOfConfig":"22"},{"size":6879,"mtime":1623389907818,"results":"29","hashOfConfig":"22"},{"size":1591,"mtime":1619732409159,"results":"30","hashOfConfig":"22"},{"size":5185,"mtime":1625776449495,"results":"31","hashOfConfig":"22"},{"size":2959,"mtime":1623008839027,"results":"32","hashOfConfig":"22"},{"size":2329,"mtime":1626207466975,"results":"33","hashOfConfig":"22"},{"size":13502,"mtime":1623386629020,"results":"34","hashOfConfig":"22"},{"size":5533,"mtime":1619729910870,"results":"35","hashOfConfig":"22"},{"size":5355,"mtime":1623390213214,"results":"36","hashOfConfig":"22"},{"size":10216,"mtime":1626207092886,"results":"37","hashOfConfig":"22"},{"size":395,"mtime":1625433283439,"results":"38","hashOfConfig":"22"},{"size":10294,"mtime":1626206881305,"results":"39","hashOfConfig":"22"},{"size":1447,"mtime":1624103747912,"results":"40","hashOfConfig":"22"},{"size":403,"mtime":1622549364784,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"sa6svp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"44"},"/usr/app/src/index.js",[],["98","99"],"/usr/app/src/App.js",["100","101","102","103","104"],"/usr/app/src/reportWebVitals.js",[],"/usr/app/src/components/editstation.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import {Toast,ListGroup,Modal,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport Bottom from './bottom';\r\n\r\nconst Editstationfeed = () => {\r\n  const {id} = useParams();\r\n\r\n  const [mystation, setmyStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station/'+id)\r\n      .then(res => res.json())\r\n      .then(mystation => setmyStation(mystation))\r\n      console.log(mystation)\r\n  },[])\r\n  \r\n  const [station, setStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n  \r\n  const [name,setname] = useState(mystation.name);\r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n      const blog = {name}\r\n      fetch('/station/'+id, {\r\n        method: 'PATCH',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(blog)\r\n      }).then(() => {\r\n        console.log('new blog added');\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('are  you sure?'))\r\n    {\r\n      fetch('/station/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  /*const history = useHistory();\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editstation/' + eventId\r\n    })\r\n  }*/\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">แก้ไขชื่อสถานที่</Card.Header>\r\n            <Card.Body>\r\n                <p>\r\n                <form>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>station</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={mystation.name}\r\n                  onChange={(e) => setname(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                {' '}<Button type=\"submit\" onClick={handleSubmit} href=\"/addstation\" variant=\"warning\">แก้ไขรายการ</Button>\r\n                {' '}<Button type=\"submit\" href=\"/addstation\" variant=\"danger\">ยกเลิก</Button>\r\n                </form>\r\n                </p>\r\n                \r\n                \r\n                \r\n\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          \r\n            </Container>\r\n            <Bottom></Bottom>\r\n\r\n\r\n            {/*<Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"10\">\r\n                  <br></br>\r\n                  <ListGroup  as=\"ul\" >\r\n                  <div>{station.map( el=> (\r\n                  <span key={el.id}>\r\n                  <ListGroup.Item  as=\"ul\">\r\n                  <Row>\r\n                  <Col xs=\"10\"><Icon.GeoAltFill/>{\" \"}{el.name}</Col>\r\n                  <Col xs=\"2\">\r\n                    <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/addstation\">\r\n                      <Icon.Trash/>\r\n                    </Button>{' '}\r\n\r\n                  \r\n                    <Button type=\"submit\" variant=\"warning\"  size=\"sm\" href={'/editstation/'+id}>\r\n                    <Icon.PencilSquare/>\r\n                    </Button>\r\n                  \r\n\r\n                  </Col>\r\n                  </Row>\r\n                  </ListGroup.Item>\r\n                  \r\n                  </span>\r\n                  ))}\r\n                  </div>\r\n                  </ListGroup>\r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n                  </Container>*/}\r\n                \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editstationfeed;\r\n","/usr/app/src/components/searchandlist.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import { Table,Badge,InputGroup,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport Filldata from \"./fiberlist\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\nimport { useHistory  } from 'react-router-dom';\r\n\r\nconst Search = () => {\r\n\r\n  const [searchTerm, setsearchTerm] = useState([])\r\n  const [product, setProduct] = useState([])\r\n  const [station, setStation] = useState([])\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch('/products')\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  },[])\r\n\r\n  \r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/products/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n  \r\n  const see = (eventId) => {\r\n    history.push({\r\n      pathname: '/product/' + eventId\r\n    })\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editproduct/' + eventId\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">SEARCH</Card.Header>\r\n            <Card.Body>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>รายการ:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"text\" \r\n                  placeholder = \"Search From Keyword\"\r\n                  onChange={(el)=>{\r\n                    setsearchTerm(el.target.value);\r\n                  }}\r\n                />\r\n                </InputGroup>\r\n            </Card.Body>\r\n            </Card>\r\n            <br></br>\r\n            <Button variant=\"warning\">\r\n              ผลลัพธ์ทั้งหมด <Badge variant=\"light\">2</Badge> รายการ\r\n              <span className=\"sr-only\">unread messages</span>\r\n            </Button>\r\n\r\n          </Col>\r\n          <Col></Col>\r\n\r\n          </Row>\r\n    </Container>\r\n\r\n    <br></br>\r\n\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n          <br></br>\r\n\r\n          <Card>\r\n            <Card.Header>\r\n            <h3><Button variant=\"success\" size=\"sm\" href=\"/insert\"><Icon.PlusCircle/>{' NEW'}</Button>{' รายการเส้นใยนำแสงภายในมหาวิทยาลัย'}</h3></Card.Header>\r\n            <Card.Body>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>รายการ</th>\r\n                            <th>ต้นทาง</th>\r\n                            <th>ปลายทาง</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n            {product.filter((val)=>{\r\n              if (searchTerm == ''){\r\n                return val\r\n              }\r\n              else if(val.name.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                return val\r\n              }\r\n\r\n            }).map((el)=> {\r\n                    return (\r\n                      <tr key={el.id}>\r\n                      <td> {el.name}{' '}<Badge variant=\"secondary\">{el.status}</Badge> </td>\r\n                      <td> {el.station1} </td>\r\n                      <td> {el.station2} </td>\r\n                      <td>\r\n                      <div className=\"center\">\r\n                      {' '}\r\n                      <Link  \r\n                            onClick = { () => see(el._id) }\r\n                            \r\n                      >\r\n                            <Button type=\"submit\" variant=\"primary\" size=\"sm\" >\r\n                            <Icon.ArrowDownRightCircle/>{' รายละเอียด'}\r\n                            </Button>\r\n                      </Link>\r\n                      {' '}\r\n                      <Link  \r\n                            onClick = { () => ed(el._id) }\r\n                            target=\"_blank\"\r\n                      >\r\n                            <Button type=\"submit\" variant=\"warning\"  size=\"sm\" >\r\n                            <Icon.PencilSquare/>\r\n                            </Button>\r\n                      </Link>\r\n                      {' '}\r\n                      <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/list\">\r\n                        <Icon.Trash/>\r\n                      </Button>\r\n                      </div>\r\n                      </td>\r\n                    </tr>\r\n                    );\r\n            })}\r\n            </tbody>\r\n            </Table>\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n    </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","/usr/app/src/components/loginpage.js",[],"/usr/app/src/components/mainpage.js",["136","137","138","139","140","141","142","143","144","145","146","147"],"import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport Bottom from './bottom';\r\nimport './style.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Main = () => {\r\n\r\n  /*const [station, setStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])*/\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            \r\n            {/*<Card>\r\n            {station.map( el=> (\r\n                  <p key={el.id}>\r\n                  {el._id}{el.name}\r\n                  </p>\r\n            ))}\r\n            </Card>*/}\r\n  \r\n            <Card border=\"success\" >\r\n            <Card.Header as=\"h5\">การเชื่อมต่อครือข่ายคอมพิวเตอร์ มหาวิทยาลัยเกษตรศาสตร์สอง</Card.Header>\r\n            <Card.Body>\r\n                <p>- <Button size=\"sm\" variant=\"link\" href=\"http://conference.ku.ac.th/vcs/ku_map/KUmap_all.pdf\">แผนผัง</Button>มหาวิทยาลัยเกษตรศาสตร์ <Button size=\"sm\" variant=\"link\" href=\"http://conference.ku.ac.th/vcs/ku_map/KU_area.zip\">แบ่งตามพื้นที่</Button>\r\n                </p><p>- การเชื่อมต่อสายสัญญาณใยแก้วนำแสง (Fiber Optic) พร้อมแนวการเดินสายสัญญาณใยแก้วนำแสง ภายในวิทยาเขตบางเขนพัฒนาจากสายสัญญาณใยแก้วนำแสงเดิม\r\n                </p><p>- ป้ายชื่อสายสัญญาณใยแก้วนำแสง มก.\r\n                </p><p>- การเชื่อมต่ออุปกรณ์เครือข่ายคอมพิวเตอร์ แบบเก่า(old)และแบบใหม่ (new)\r\n                </p><p>- มาตรฐานระบบสายสัญญาณ UTP Cat6 และTIA ของสายสัญญาณใยแก้วนำแสง\r\n                </p><p>- การกำหนดคุณสมบัติสายสัญญาณใยแก้วนำแสง 3 เส้นทาง\r\n                </p><p>- การกำหนดคุณคุณสมับิตเฉพาะ สายสัญญาณใยแก้วนำแสง 5 เส้นทาง\r\n                </p><p>- ผังการเชื่อมต่อระบบ VoIP ของ มก. และคู่มือการใช้งาน IP Phone\r\n                </p><p>- คู่มือ EXFO ASX-110\r\n                </p><p>- ผลการตรวจสอบสายสัญญาณใยแก้วนำแสงด้วย OTDR ของโดยใช้โปรแกรม OTDR viewer มีดังต่อไปนี้\r\n                </p>\r\n            </Card.Body>\r\n            </Card>\r\n            <br/>\r\n            <Card border=\"success\" >\r\n            \r\n            <Card.Body>\r\n                <p>          มาตรฐานระบบสายสัญญาณ Category 6 หรือ Cat6 เป็นมาตรฐานที่ TIA ก็ได้ประกาศใช้มาตรฐาน Cat6 อย่างเป็นทางการเมื่อวันที่ 20 มิถุนายน 2002 ที่ผ่านมาภายใต้เอกสาร ANSI/TIA/EIA-568-B.2-1 เพื่อใช้กับระบบสายสัญญาณ ชนิดสายคู่ตีเกลียวแบบสมดุลย์ (Balanced Twisted-Pair Cabling Systems) ระดับ Category 6 มาตรฐานฉบับนี้นอกจากจะครอบคุลมหัวข้อกำหนดทางด้านสมรรถนะของระบบเหมือนมาตรฐานรุ่นก่อน ๆ แล้ว ยังได้รวมเอาข้อกำหนดของอุปกรณ์ต่อเชื่อม (Connecting Hardware) ในระดับชิ้นส่วน(Component) และการทดสอบ(Measurement/Test Procedure) ต่าง ๆ เข้าไปด้วย\r\n                          สาระสำคัญของมาตรฐาน ANSI/TIA/EIA-568-B.2-1 คือ\r\n                </p><p>          1. สามารถใช้กับระบบ Cat3, Cat5 และ Cat5e ที่มีอยู่เดิมได้ (Backward Compatibility)\r\n                </p><p>          2. เป็นมาตรฐานเปิดที่ทำให้ผลิตภัณฑ์ที่ผลิตจากผู้ผลิตต่าง ๆ กันสามารถทำงานร่วมกันได้(Open Standard)\r\n                </p><p>          3. RJ-45 Moddular Plug และJack จากหลากหลายผู้ผลิตสามารถเข้ากันหรือทำงานร่วมกันได้(Inter-Operabitility)\r\n                </p><p>          4. ข้อกำหนดสมบูรณ์ทั้งระบบครอบคลุมถึงการทดสอบชิ้นส่วน(Component),Patch Cord, Channels และ Permanent Link\r\n                </p><p>          5. มีความกว้างของช่องสัญญาณ(Bandwidth) เป็น 2 เท่าของระบบ Cat5e และมีค่า Power Sum Attenuation to Cross-Talk Ratio (PSACR) เป็นบวกถึง 200 MHz\r\n                </p><p>          6. ข้อกำหนดของชิ้นส่วนและสายเคเบิ้ลต้องได้รับการทดสอบถึง 250 MHz\r\n                </p><p>          หมายเหตุ วิธีการที่ใช้ทดสอบตามที่ระบุไว้ในมาตรฐาน ANSI/TIA/EIA-568-B.2-1 มีชื่อเรียกทางเทคนิคว่า \"De-Embedded Test Method\" เป็นวิธีการภาคบังคับตามที่มาตรฐานฉบับนี้ได้กำหนดไว้เพื่อใช้ในการทดสอบชิ้นส่วนอุปกรณ์ต่อเชื่อมในระดับ Cat6 ทุกตัว\r\n                </p>\r\n                \r\n            </Card.Body>\r\n            </Card>\r\n\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>      \r\n          </Container>\r\n          <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default Main;\r\n\r\nexport default Main;\r\n","/usr/app/src/components/fiberlist.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import { InputGroup,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\n//import Datapage from \"./productdetale\"\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\n\r\n\r\nconst Filldata = () => {\r\n  const [product, setProduct] = useState([])\r\n  const history = useHistory();\r\n  const [searchTerm, setsearchTerm] = useState([])\r\n \r\n\r\n  useEffect(() => {\r\n    fetch('/products')\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  },[])\r\n\r\n  \r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/products/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n  \r\n  const see = (eventId) => {\r\n    history.push({\r\n      pathname: '/product/' + eventId\r\n    })\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editproduct/' + eventId\r\n    })\r\n  }\r\n\r\n  const count = product.filter((v)=>{\r\n    if (searchTerm == ''){\r\n      return v\r\n    }\r\n    else if(\r\n      (v.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      || (v.station1.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      || (v.station2.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    ){\r\n      return v\r\n    }\r\n\r\n  }).length\r\n  \r\n\r\n  return (\r\n      <div>\r\n            <Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"12\">\r\n            \r\n            <InputGroup size=\"sm\" className=\"mb-3\">\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">รายการ:</InputGroup.Text>\r\n                </InputGroup.Prepend >\r\n                <FormControl \r\n                  size=\"sm\"\r\n                  type=\"text\" \r\n                  placeholder = \"Search From Keyword\"\r\n                  onChange={(el)=>{\r\n                    setsearchTerm(el.target.value);\r\n                  }}\r\n                />\r\n                </InputGroup>\r\n                  \r\n                <Button variant=\"warning\" size=\"sm\">\r\n                ผลลัพธ์ทั้งหมด <Badge variant=\"light\">{count}</Badge> รายการ\r\n                <span className=\"sr-only\">unread messages</span>\r\n                </Button>\r\n                <br/>\r\n                  <br></br>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>รายการ</th>\r\n                            <th>ต้นทาง</th>\r\n                            <th>ปลายทาง</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                         {product.filter((val)=>{\r\n                            if (searchTerm == ''){\r\n                              return val\r\n                            }\r\n                            else if(\r\n                              (val.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                              || (val.station1.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                              || (val.station2.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                            ){\r\n                              return val\r\n                            }\r\n\r\n                          }).sort(function(a,b){\r\n                            a.name = a.name.toLowerCase();\r\n                            b.name = b.name.toLowerCase();\r\n                            if(a.name>b.name){\r\n                              return 1;}\r\n                            else if(a.name<b.name){\r\n                              return -1;}\r\n                            else {\r\n                              return 0;}\r\n \r\n                          }).map(el=> (\r\n                          <tr key={el.id}>\r\n                            <td> {el.name}{' '}<Badge variant=\"secondary\">{el.status}</Badge> </td>\r\n                            <td> {el.station1} </td>\r\n                            <td> {el.station2} </td>\r\n                            <td>\r\n                            <div className=\"center\">\r\n                            {' '}\r\n                            <Link  \r\n                                  onClick = { () => see(el._id) }\r\n                                  \r\n                            >\r\n                                  <Button type=\"submit\" variant=\"primary\" size=\"sm\" >\r\n                                  <Icon.ArrowDownRightCircle/>{' รายละเอียด'}\r\n                                  </Button>\r\n                            </Link>\r\n                            {' '}\r\n                            <Link  \r\n                                  onClick = { () => ed(el._id) }\r\n                                  target=\"_blank\"\r\n                            >\r\n                                  <Button type=\"submit\" variant=\"warning\"  size=\"sm\" >\r\n                                  <Icon.PencilSquare/>\r\n                                  </Button>\r\n                            </Link>\r\n                            {' '}\r\n                            <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/list\">\r\n                              <Icon.Trash/>\r\n                            </Button>\r\n                            </div>\r\n                            </td>\r\n                          </tr>)\r\n                          )}\r\n                          </tbody>\r\n                      </Table>\r\n                    <br></br>\r\n                  \r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n            </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst List = () => {\r\n  return (\r\n    \r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n          <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header>\r\n            <h3><Button variant=\"success\" size=\"sm\" href=\"/insert\"><Icon.PlusCircle/>{' NEW'}</Button>{' รายการเส้นใยนำแสงภายในมหาวิทยาลัย'}</h3></Card.Header>\r\n            <Card.Body>\r\n              \r\n              \r\n              <Filldata></Filldata>\r\n              \r\n                \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","/usr/app/src/components/map.js",["162","163","164","165","166","167","168","169","170","171","172","173"],"import React from \"react\";\r\nimport { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  Polygon\r\n} from \"react-google-maps\";\r\nimport Headbar from './headbar';\r\n\r\nclass Map extends React.Component {\r\n  path = [\r\n    { lat: 13.847039, lng: 100.5694708 },\r\n    { lat: 13.8470245, lng: 100.5698754 }\r\n  ];\r\n  render = () => {\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={16} \r\n        defaultCenter={{ lat: 13.847039, lng: 100.5694708 }}\r\n      >\r\n        <Polygon path={this.path} options={{ strokeColor: \"#FF0000 \" }} />\r\n      </GoogleMap>\r\n    );\r\n  };\r\n}\r\n\r\nconst MapComponent = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default () => (\r\n  <div>\r\n  <Headbar></Headbar>\r\n  <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">Map</Card.Header>\r\n            <Card.Body>\r\n            <MapComponent\r\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\r\n                loadingElement={<div style={{ height: `100%` }} />}\r\n                containerElement={<div style={{ height: `400px`, width: \"500px\" }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>      \r\n        </Container>\r\n  </div>\r\n);\r\n","/usr/app/src/components/addstation.js",["174","175","176","177","178","179","180","181","182","183","184","185"],"import {Toast,ListGroup,Modal,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport Bottom from './bottom';\r\n\r\nconst Filldata = () => {\r\n  const history = useHistory();\r\n  const [station, setStation] = useState([])\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('are  you sure?'))\r\n    {\r\n      fetch('/station/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editstation/' + eventId\r\n    })\r\n  }\r\n  \r\n  return (\r\n      <div>\r\n            <Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"10\">\r\n                  <br></br>\r\n                  <ListGroup  as=\"ul\" >\r\n                  <div>\r\n                  {station.sort(function(a,b){\r\n                            a.name = a.name.toLowerCase();\r\n                            b.name = b.name.toLowerCase();\r\n                            if(a.name>b.name){\r\n                              return 1;}\r\n                            else if(a.name<b.name){\r\n                              return -1;}\r\n                            else {\r\n                              return 0;}\r\n \r\n                          }).map( el=> (\r\n                  <span key={el.id}>\r\n                  <ListGroup.Item  as=\"ul\">\r\n                  <Row>\r\n                  <Col xs=\"10\"><Icon.GeoAltFill/>{\" \"}{el.name}</Col>\r\n                  <Col xs=\"2\">\r\n                    <div className=\"right\">\r\n                    <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(el._id)} href=\"/addstation\">\r\n                      <Icon.Trash/>\r\n                    </Button>{' '}\r\n                    <Link  onClick = {()=>ed(el._id)}>\r\n                        <Button type=\"submit\" variant=\"warning\"  size=\"sm\" >\r\n                        <Icon.PencilSquare/>\r\n                        </Button>\r\n                    </Link>\r\n                    </div>\r\n                  </Col>\r\n                  </Row>\r\n                  </ListGroup.Item>\r\n                  \r\n                  </span>\r\n                  ))}\r\n                  </div>\r\n                  </ListGroup>\r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n            </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Addstation = () => {\r\n  \r\n  const [name, setName] = useState('');\r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n   \r\n    const blog = { name };\r\n\r\n    fetch('/station', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"10\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">เพิ่มสถานที่</Card.Header>\r\n            <Card.Body>\r\n                \r\n                <form>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>station</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                <Button variant=\"warning\" type=\"submit\" onClick={handleSubmit} href=\"/addstation\">เพิ่ม</Button>\r\n                {' '}<Button type=\"submit\" \r\n                            variant=\"dark\"\r\n                            href=\"https://www.google.co.th/maps/place/%E0%B8%A1.%E0%B9%80%E0%B8%81%E0%B8%A9%E0%B8%95%E0%B8%A3%E0%B8%A8%E0%B8%B2%E0%B8%AA%E0%B8%95%E0%B8%A3%E0%B9%8C+%E0%B8%9A%E0%B8%B2%E0%B8%87%E0%B9%80%E0%B8%82%E0%B8%99/@13.8434899,100.5717821,15.85z/data=!4m9!1m2!2m1!1z4Lih4Lir4Liy4Lin4Li04LiX4Lii4Liy4Lil4Lix4Lii4LmA4LiB4Lip4LiV4Lij4Lio4Liy4Liq4LiV4Lij4LmMIOC4p-C4tOC4l-C4ouC4suC5gOC4guC4lQ!3m5!1s0x30e29d1e111be769:0x4332e8cd6aec8c31!8m2!3d13.8484754!4d100.5723925!15sClvguKHguKvguLLguKfguLTguJfguKLguLLguKXguLHguKLguYDguIHguKnguJXguKPguKjguLLguKrguJXguKPguYwg4Lin4Li04LiX4Lii4Liy4LmA4LiC4LiVIgOIAQGSAQZzY2hvb2w\"  \r\n                             >\r\n                        <Icon.MapFill/>{\" Google Map\"}\r\n                </Button>\r\n\r\n                </form>\r\n\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n    <Filldata></Filldata>\r\n    </Container>\r\n    <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addstation;","/usr/app/src/components/FileUpload.js",[],"/usr/app/src/components/register.js",["186","187","188","189","190","191"],"import {Form,Button,Card,Container,Row,Col,Nav} from 'react-bootstrap';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Headbar from './headbar';\r\n\r\nconst Register = () => {\r\n\r\n  const [regstatus, setregstatus] = useState('');\r\n  const [regusername, setregusername] = useState('');\r\n  const [regpassword, setregpassword] = useState('');\r\n\r\n  const history = useHistory()\r\n\r\n  const register =()=>{\r\n    fetch(\"/register\", {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      username: regusername,\r\n      password: regpassword,\r\n    })\r\n    \r\n    axios.post(\"/register\",{\r\n      username: regusername,\r\n      password: regpassword,\r\n    }).then((res)=>{\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n          <Headbar></Headbar>\r\n          <Container>\r\n          <br></br><br></br><br></br><br></br>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"7\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">{\"register\"}</Card.Header>\r\n            <Card.Body>\r\n              <form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  placeholder=\"Enter User\" \r\n                  onChange={(e)=>{setregusername(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                  type=\"password\" \r\n                  placeholder=\"Password\" \r\n                  onChange={(e)=>{setregpassword(e.target.value)}}\r\n                />\r\n              </Form.Group>\r\n\r\n              \r\n              <Button onClick={register} variant=\"success\" type=\"submit\" href=\"/list\">\r\n                Create\r\n              </Button>\r\n            \r\n\r\n              </form>\r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n          \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","/usr/app/src/components/productdetale.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import { InputGroup,Accordion,CardGroup,Carousel,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport Headbar from './headbar';\r\nimport Bottom from './bottom';\r\nimport UploadFiles from './FileUpload';\r\nimport { Link } from 'react-router-dom';\r\nimport test1 from '../img/test1.jpg';\r\nimport test2 from '../img/test2.jpg';\r\n\r\nconst Datapage = () => {\r\n      \r\n  const history = useHistory();\r\n  const {id} = useParams();\r\n  const [product,setProduct] = useState([])\r\n  const [repair,setRepair] = useState([])\r\n\r\n  useEffect(() => {\r\n      fetch('/products/'+id)\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    fetch('/repair')\r\n    .then(res => res.json())\r\n    .then(repair => setRepair(repair))\r\n    console.log(product)\r\n  },[])\r\n\r\n                               \r\n  const [rdetale,setrdetale] = useState('');\r\n  const [rdate,setrdate] = useState('');\r\n  const [rid,setrid] = useState(id);\r\n\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n    const blog = {rdetale,rdate,rid}\r\n    fetch('/repair', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  const Del = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/products/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  const Delr = (dataid) =>\r\n  {\r\n    if(window.confirm('จะลบช้ะะะะ?'))\r\n    {\r\n      fetch('/repair/'+dataid, \r\n      { method: 'DELETE' ,\r\n        header: {'Accept':'application/json','Content-Type':'application/json'}\r\n      })\r\n    }\r\n  }\r\n\r\n  const ed = (eventId) => {\r\n    history.push({\r\n      pathname: '/editproduct/' + eventId\r\n    })\r\n  }\r\n\r\n  return (\r\n        <div className=\"App-main\">\r\n        <Headbar></Headbar>\r\n        <br></br>     \r\n        \r\n        <Container>\r\n        <Row>\r\n        <Col></Col>\r\n        <Col xs=\"12\">\r\n            <Card border=\"success\" >\r\n            <Card.Header as=\"h5\">\r\n              <Badge variant=\"success\">{product ? product.status :null}</Badge>{' '}{product ? product.name : null}{' '}\r\n              <p className=\"right\">\r\n              {' '}\r\n              <Link onClick = {()=>ed(id)} target=\"_blank\">\r\n                <Button type=\"submit\" variant=\"warning\"  size=\"sm\" ><Icon.PencilSquare/></Button>\r\n              </Link>{' '}\r\n              <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Del(id)} href=\"/list\"><Icon.Trash/></Button>\r\n              </p>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <p>       <Badge variant=\"warning\">{'ต้นทาง '}</Badge>{'  :  '}{product ? product.station1 :null}{' '}\r\n                          <Badge variant=\"warning\">{'ปลายทาง '}</Badge>{'  :  '}{product ? product.station2 :null}{' '}\r\n                          <Badge variant=\"success\">{'สถานะ'}</Badge>{'  :  '}{product ? product.status :null}\r\n                </p><p>   <Badge variant=\"dark\">{'ชนิดของสาย '}</Badge>{'  :  '}{product ? product.fibertype :null}{' '}\r\n                          <Badge variant=\"dark\">{'ระยะทางโดยประมาณ '}</Badge>{'  :  '}{product ? product.notuse_core :null}{' เมตร '}{' '}\r\n                          <Badge variant=\"dark\">{'จำนวน core '}</Badge>{'  :  '}{product ? product.core :null}{' core '}{' '}\r\n                          <Badge variant=\"dark\">{'ใช้งานไปแล้ว '}</Badge>{'  :  '}{product ? product.use_core :null}{' core '}{' '}\r\n                          <Badge variant=\"dark\">{'คงเหลือที่ว่าง '}</Badge>{'  :  '}{product ? product.notuse_core :null}{' core '}{' '}\r\n                </p><p>   <Badge variant=\"dark\">{'วันที่'}</Badge>{'  :  '}{product ? product.date :null}{' '}\r\n                          <Badge variant=\"dark\">{'ผู้ดำเนินการ '}</Badge>{'  :  '}{product ? product.person :null}{' '}\r\n                </p>\r\n            </Card.Body>\r\n            </Card>\r\n            <br/>\r\n     \r\n                        <Card border=\"success\" >\r\n                        <Card.Header as=\"h5\">\r\n                          ข้อมูลการซ่อมแซมและการบำรุงรักษา\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n\r\n\r\n                        <form>\r\n                        <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend size=\"sm\">\r\n                        <InputGroup.Text size=\"sm\">id</InputGroup.Text>\r\n                        </InputGroup.Prepend >\r\n                        <FormControl \r\n                          type=\"string\" \r\n                          required \r\n                          value={rid}\r\n                          size=\"sm\"\r\n                          oncontextmenu={(e) => setrid(e.target.value)}\r\n                        />\r\n                        </InputGroup>\r\n                        <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend size=\"sm\">\r\n                        <InputGroup.Text size=\"sm\">รายการ</InputGroup.Text>\r\n                        </InputGroup.Prepend >\r\n                        <FormControl \r\n                          type=\"string\" \r\n                          required \r\n                          value={rdetale}\r\n                          size=\"sm\"\r\n                          onChange={(e) => setrdetale(e.target.value)}\r\n\r\n                        />\r\n                        <InputGroup.Prepend size=\"sm\">\r\n                        <InputGroup.Text size=\"sm\">วันที่ดำเนินการ</InputGroup.Text>\r\n                        </InputGroup.Prepend >\r\n                        <FormControl \r\n                          size=\"sm\"\r\n                          type=\"string\" \r\n                          required \r\n                          value={rdate}\r\n                          onChange={(e) => setrdate(e.target.value)}\r\n                        />\r\n                        <Button size=\"sm\" type=\"submit\" variant=\"success\" onClick={handleSubmit}>เพิ่ม</Button>\r\n                        </InputGroup>\r\n                        </form>\r\n                        <Table striped bordered hover size=\"sm\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"center\">date</th>\r\n                              <th className=\"center\">รายการซ่อม</th>\r\n                              <th className=\"center\"></th>\r\n                              \r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          \r\n                            {repair.filter((val)=>{\r\n                              if (val.rid == id){\r\n                                return val\r\n                            }\r\n                            }).map((el)=>(\r\n                                <tr key={el.id}>\r\n                                {' '}\r\n                                <th className=\"center\">{el.rdate}</th>\r\n                                <th>{' '}{el.rdetale}</th>\r\n                                <th>\r\n                                  <div>\r\n                                  <Button variant=\"danger\" type=\"submit\" size=\"sm\" onClick={()=>Delr(el._id)} href={\"/product/\"+el.rid}><Icon.Trash/></Button>\r\n                                  </div>\r\n                                </th>\r\n                                </tr>\r\n\r\n                            ))}\r\n                          \r\n                          </tbody>\r\n                        </Table>\r\n\r\n                        </Card.Body>\r\n                        </Card>\r\n\r\n                        <br/>\r\n\r\n                        <Card border=\"success\" >\r\n                        <Card.Header as=\"h5\">\r\n                          หมายเหตุ\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                        {product ? product.anyelse :null}\r\n                              {/*<form>\r\n                              <InputGroup>\r\n                              <InputGroup.Prepend>\r\n                              <InputGroup.Text>วันที่ดำเนินงาน</InputGroup.Text>\r\n                              </InputGroup.Prepend>\r\n                              <FormControl \r\n                                type=\"string\" \r\n                                required \r\n                                value={imgid}\r\n                                onChange={(e) => setimgid(e.target.value)}\r\n                              />\r\n                              <Form.Group controlId=\"formFileSm\" className=\"mb-3\">\r\n                              <Form.Label>Small file input example</Form.Label>\r\n                              <Form.Control \r\n                                type=\"file\" \r\n                                size=\"sm\" \r\n                                name=\"images\" \r\n                                id=\"formFile\" \r\n                                multiple\r\n                              />\r\n                              \r\n                              </Form.Group>\r\n                              </InputGroup>\r\n                              <Button type=\"submit\" onClick={handleSubmit}>เพิ่มรายการ</Button>\r\n                              </form>\r\n                              <div>\r\n                              <form>\r\n                              <input\r\n                                type=\"string\" \r\n                                required \r\n                                value={imgid}\r\n                                onChange={(e) => setimgid(e.target.value)}\r\n                              />\r\n                              <input type=\"file\" class=\"form-control\" name=\"images\" id=\"formFile\" multiple/>\r\n                              <Button type=\"submit\" class=\"btn btn-warning\" value=\"Upload Images\" onClick={handleSubmit} />\r\n                              \r\n                             \r\n                              </form>\r\n                              </div>*/}\r\n                            \r\n                        </Card.Body>\r\n                        </Card>\r\n            \r\n\r\n            \r\n            \r\n            <br/>\r\n            {/*<CardGroup>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\" />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={test1} alt=\"Girl in a jacket\" width=\"200\" height=\"200\"  />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  \r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card>\r\n            </CardGroup>\r\n            */}\r\n\r\n            \r\n          \r\n\r\n        </Col>\r\n        <Col></Col>\r\n         </Row>\r\n        </Container>\r\n        <Bottom></Bottom>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Datapage;\r\n\r\n\r\n","/usr/app/src/components/adjust.js",["211","212","213","214","215","216","217","218"],"import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\n\r\nconst Adjust = () => {\r\n  return (\r\n    <div>\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">แก้ไขข้อมูล</Card.Header>\r\n            <Card.Body>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">รายการ</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>เส้นทางผ่าน 1</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                    <option>อาคารระพีสาคริก สำนักบริหารการศึกษา</option>\r\n                    <option>อาคาร 15 คณะวิศวกรรมศาสตร์</option>\r\n                    <option>สำนักการกีฬา</option>\r\n                    <option>อาคารสารนิเทศ 50 ปี สำนักงานอธิการ มก.</option>\r\n                    <option>อาคารเรียนและปฏิบัติการทางด้านวิทยาศาสตร์กายภาพ คณะวิทยาศาสตร์</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>เส้นทางผ่าน 2</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                    <option>อาคารระพีสาคริก สำนักบริหารการศึกษา</option>\r\n                    <option>อาคาร 15 คณะวิศวกรรมศาสตร์</option>\r\n                    <option>สำนักการกีฬา</option>\r\n                    <option>อาคารสารนิเทศ 50 ปี สำนักงานอธิการ มก.</option>\r\n                    <option>อาคารเรียนและปฏิบัติการทางด้านวิทยาศาสตร์กายภาพ คณะวิทยาศาสตร์</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form>\r\n                {['radio'].map((type) => (\r\n                  <div key={`inline-${type}`} className=\"mb-3\">\r\n                    {\"ชนิดของสาย \"}\r\n                    <Form.Check inline label=\"SM\" type={type} id={`inline-${type}-1`} />\r\n                    <Form.Check inline label=\"MM\" type={type} id={`inline-${type}-2`} />\r\n                  </div>\r\n                ))}\r\n            </Form>\r\n            \r\n            <Row>\r\n            <Col>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">จำนวน core</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            </Col>\r\n            <Col>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">ใช้จริง</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            </Col>\r\n            <Col>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">สำรอง</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            </Col>\r\n            </Row>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-default\">หมายเหตุ</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n            aria-label=\"Default\"\r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            </InputGroup>\r\n            \r\n            <InputGroup>\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text>ข้อมูลเพิ่มเติม</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl as=\"textarea\" aria-label=\"With textarea\" />\r\n            </InputGroup>\r\n\r\n            <br></br>\r\n            <Button variant=\"danger\" type=\"submit\" href=\"/main\">\r\n                แก้ไขข้อมูล\r\n            </Button>\r\n            \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adjust;\r\n","/usr/app/src/components/repairlist.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import { InputGroup,ListGroup,Table,Badge,Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Bottom from './bottom';\r\n\r\n\r\nconst Filldata2 = () => {\r\n  const [product, setProduct] = useState([])\r\n  const history = useHistory();\r\n  const [searchTerm, setsearchTerm] = useState([])\r\n  const [repair, setRepair] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch('/repair')\r\n      .then(res => res.json())\r\n      .then(repair => setRepair(repair))\r\n      console.log(repair)\r\n  },[])\r\n\r\n  /*const pustproduct1 =(pid)=>{\r\n    fetch('/products/'+pid)\r\n        .then(res => res.json())\r\n        .then(product => setProduct(product))\r\n    return(\r\n      <div>{product.station1}</div>\r\n    );\r\n  }\r\n\r\n  const pustproduct2 =(pid)=>{\r\n      fetch('/products/'+pid)\r\n          .then(res => res.json())\r\n          .then(product => setProduct(product))\r\n    return(\r\n      <div>{product.station2}</div>\r\n    );\r\n  }*/\r\n\r\n  const count = repair.filter((v)=>{\r\n    if (searchTerm == ''){\r\n      return v\r\n    }\r\n    else if(v.rdetale.toLowerCase().includes(searchTerm.toLowerCase())){\r\n      return v\r\n    }\r\n  }).length\r\n  \r\n\r\n  return (\r\n      <div>\r\n            <Container>\r\n            <Row>\r\n            <Col></Col>\r\n            <Col xs=\"12\">\r\n            \r\n            <InputGroup size=\"sm\" className=\"mb-3\">\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">รายการซ่อม:</InputGroup.Text>\r\n                </InputGroup.Prepend >\r\n                <FormControl \r\n                  size=\"sm\"\r\n                  type=\"string\" \r\n                  placeholder = \"Search From Keyword\"\r\n                  onChange={(el)=>{\r\n                    setsearchTerm(el.target.value);\r\n                  }}\r\n                />\r\n                </InputGroup>\r\n                  \r\n                <Button variant=\"warning\" size=\"sm\">\r\n                ผลลัพธ์ทั้งหมด <Badge variant=\"light\">{count}</Badge> รายการ\r\n                <span className=\"sr-only\">unread messages</span>\r\n                </Button>\r\n                <br/>\r\n                  <br></br>\r\n                  <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>รายการ</th>\r\n                            <th>วันที่ดำเนินการ</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                         {repair.filter((val)=>{\r\n                            if (searchTerm == ''){\r\n                              return val\r\n                            }\r\n                            else if(\r\n                              (val.rdetale.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                            ){\r\n                              return val\r\n                            }\r\n\r\n                          }).sort(function(a,b){\r\n                            a.rdetale = a.rdetale.toLowerCase();\r\n                            b.rdetale = b.rdetale.toLowerCase();\r\n                            if(a.rdetale>b.rdetale){\r\n                              return 1;}\r\n                            else if(a.rdetale<b.rdetale){\r\n                              return -1;}\r\n                            else {\r\n                              return 0;}\r\n                          }).map(el=> (\r\n                          <tr key={el.id}>\r\n                            <td> {el.rdetale}</td>\r\n                            <td> {el.rdate} </td>\r\n                            <td> \r\n                            <div>\r\n                            {' '}\r\n                            <Button size=\"sm\" variant=\"dark\" type=\"submit\" href={\"/product/\"+el.rid}>\r\n                            <Icon.ArrowDownRightCircle/>{' รายละเอียด'}\r\n                            </Button>\r\n                            \r\n                            </div>\r\n                            </td>\r\n                          </tr>)\r\n                          )}\r\n                          </tbody>\r\n                      </Table>\r\n                    <br></br>\r\n                  \r\n            </Col>\r\n            <Col></Col>\r\n            </Row>\r\n            </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst RepairList = () => {\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n          <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header>\r\n            <h3>{' รายการซ่อมเส้นใยนำแสงภายในมหาวิทยาลัย'}</h3></Card.Header>\r\n            <Card.Body>\r\n              <Filldata2></Filldata2>      \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n          </Container>\r\n          <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepairList;\r\n","/usr/app/src/components/editproduct.js",["237","238","239","240","241","242","243","244","245","246"],"import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport Bottom from './bottom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Edit = () => {\r\n  \r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    getStation();\r\n    getProduct();\r\n  }, [])\r\n\r\n  const [station,setStation] = useState([])\r\n  const [product,setProduct] = useState([])\r\n  const [name,setname] = useState(product.name);\r\n  const [status,setstatus] = useState(product.status);\r\n  const [station1,setstation1] = useState(product.station1);\r\n  const [station2,setstation2] = useState(product.station2);\r\n  const [fibertype,setfibertype] = useState(product.fibertype);\r\n  const [distance,setdistance] = useState(product.distance);\r\n  const [core,setcore] = useState(product.core);\r\n  const [use_core,setuse_core] = useState(product.use_core);\r\n  const [notuse_core,setnotuse_core] = useState(product.notuse_core);\r\n  const [date,setdate] = useState(product.date);\r\n  const [person,setperson] = useState(product.person);\r\n  const [anyelse,setanyelse] = useState(product.anyelse);\r\n\r\n  const getStation = () => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  }\r\n\r\n  const getProduct = () => {\r\n    fetch('/products/'+id)\r\n      .then(res => res.json())\r\n      .then(product => setProduct(product))\r\n      console.log(product)\r\n  }\r\n  \r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n    const blog = { name,status,station1,station2,fibertype,distance,\r\n        core,use_core,notuse_core,date,person,anyelse,\r\n    }\r\n    fetch('/products/'+id, {\r\n      method: 'PATCH',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">Edit</Card.Header>\r\n            <Card.Body>\r\n               \r\n            <form>\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>รายการ</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.name}\r\n                  onChange={(e) => setname(e.target.value)}\r\n                />     \r\n                </InputGroup>\r\n                {/*status+type+insertplace*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>สถานะการใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.status}\r\n                  onChange={(e) => setstatus(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>{product.status}</option>\r\n                    <option>กำลังใช้งาน</option>\r\n                    <option>อยู่ระหว่างการดำเนินการ</option>\r\n                    <option>ยังไม่ดำเนินการ</option>\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ประเภทของสาย</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.fibertype}\r\n                  onChange={(e) => setfibertype(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>{product.fibertype}</option>\r\n                    \r\n                    <option>Single Mode</option>\r\n                    <option>Multi Mode</option>\r\n                    <option>ไม่ระบุ</option>\r\n                </Form.Control>\r\n                <Button variant=\"success\" type=\"submit\" href=\"/addstation\">\r\n                เพิ่มตัวเลือกสถานที่ต้นทางหรือปลายทางเพิ่มเติม\r\n                </Button>\r\n                </InputGroup>\r\n\r\n                {/*s1+s2*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ต้นทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.station1}\r\n                  onChange={(e) => setstation1(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>{product.station1}</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ปลายทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.station2}\r\n                  onChange={(e) => setstation2(e.target.value)}\r\n                  as=\"select\"\r\n                  placeholder=\"Password\"\r\n                  >\r\n                    <option>{product.station2}</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                </InputGroup>\r\n                \r\n                {/*core+distance*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ระยะทางโดยประมาณ(m)</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.distance}\r\n                  onChange={(e) => setdistance(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>จำนวน Core</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.core}\r\n                  onChange={(e) => setcore(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ถูกใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.use_core}\r\n                  onChange={(e) => setuse_core(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ยังไม่ได้ใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  defaultValue={product.notuse_core}\r\n                  onChange={(e) => setnotuse_core(e.target.value)}\r\n                />\r\n\r\n                </InputGroup>\r\n\r\n                {/*date+restname*/}\r\n                <InputGroup className=\"mb-3\" size=\"sm\">\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">วันที่ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                {/*<FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.date}\r\n                  onChange={(e) => setdate(e.target.value)}\r\n                />*/}\r\n                <DatePicker defaultValue={product.date} selected={date} onChange={(date) => setdate(date)} />\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">ผู้ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  defaultValue={product.person}\r\n                  onChange={(e) => setperson(e.target.value)}\r\n                  size=\"sm\"\r\n                />\r\n                </InputGroup>\r\n\r\n                {/*else*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ข้อมูลเพิ่มเติม</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  as=\"textarea\" \r\n                  aria-label=\"With textarea\" \r\n                  type=\"string\" \r\n                  required\r\n                  defaultValue={product.anyelse}\r\n                  onChange={(e) => setanyelse(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                {/*<button onClick={updateUser} >Update User</button> */}\r\n                \r\n                <Button type=\"submit\" onClick={handleSubmit} href=\"/list\">แก้ไขรายการ</Button>\r\n            </form>\r\n            \r\n            <br></br>\r\n          \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n    </Container>\r\n    <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","/usr/app/src/components/hello.js",["247","248","249","250","251","252","253","254","255","256"],"import { Navbar,Nav,Form,Button,FormControl,Card,NavDropdown } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Hello = () => {  \r\n  return (\r\n    <div className=\"App-main\">\r\n     <p>hello kufiber</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hello;\r\n","/usr/app/src/components/add.js",["257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import { Navbar,Nav,Form,Button,FormControl,Card,Container,Row,Col,DropdownButton,Dropdown,Select,Option,Jumbotron,InputGroup} from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Headbar from './headbar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Bottom from './bottom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Add = () => {\r\n  const [name, setname] = useState('');\r\n  const [status, setstatus] = useState('');\r\n  const [station1, setstation1] = useState('');\r\n  const [station2, setstation2] = useState('');\r\n  const [fibertype, setfibertype] = useState('');\r\n  const [distance, setdistance] = useState('');\r\n  const [core, setcore] = useState('');\r\n  const [use_core, setuse_core] = useState('');\r\n  const [notuse_core, setnotuse_core] = useState('');\r\n  const [date, setdate] = useState('');\r\n  const [person, setperson] = useState('');\r\n  const [repair, setrepair] = useState('');\r\n  const [anyelse, setanyelse] = useState('');\r\n  \r\n  const [station, setStation] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch('/station')\r\n      .then(res => res.json())\r\n      .then(station => setStation(station))\r\n      console.log(station)\r\n  },[])\r\n  \r\n  const handleSubmit = () => {\r\n    if(window.confirm('are  you sure?')){\r\n   \r\n    const blog = { name,status,station1,station2,fibertype,distance,\r\n      core,use_core,notuse_core,date,person,repair,anyelse,\r\n    }\r\n\r\n    fetch('/products', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n    })\r\n  }\r\n  }\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  return (\r\n    <div className=\"App-main\">\r\n    <Headbar></Headbar>\r\n    <br></br>\r\n    <Container>\r\n          <Row>\r\n          <Col></Col>\r\n          <Col xs=\"12\">\r\n            <Card>\r\n            <Card.Header as=\"h5\">Add</Card.Header>\r\n            <Card.Body>\r\n            <form>\r\n\r\n                {/*name*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>รายการ</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={name}\r\n                  onChange={(e) => setname(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n\r\n                {/*status+type+insertplace*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>สถานะการใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={status}\r\n                  onChange={(e) => setstatus(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    <option>กำลังใช้งาน</option>\r\n                    <option>อยู่ระหว่างการดำเนินการ</option>\r\n                    <option>ยังไม่ดำเนินการ</option>\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ประเภทของสาย</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={fibertype}\r\n                  onChange={(e) => setfibertype(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    <option>Single Mode</option>\r\n                    <option>Multi Mode</option>\r\n                    <option>ไม่ระบุ</option>\r\n                </Form.Control>\r\n                <Button variant=\"success\" type=\"submit\" href=\"/addstation\">\r\n                เพิ่มตัวเลือกสถานที่ต้นทางหรือปลายทางเพิ่มเติม\r\n                </Button>\r\n                </InputGroup>\r\n\r\n                {/*s1+s2*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ต้นทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={station1}\r\n                  onChange={(e) => setstation1(e.target.value)}\r\n                  as=\"select\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ปลายทาง</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control \r\n                  type=\"string\" \r\n                  required \r\n                  value={station2}\r\n                  onChange={(e) => setstation2(e.target.value)}\r\n                  as=\"select\"\r\n                  placeholder=\"Password\"\r\n                  >\r\n                    <option>เลือกรายการ</option>\r\n                    {station.map( el=> (\r\n                    <option key={el.id}>\r\n                      {el.name}\r\n                    </option>\r\n                    ))}\r\n                </Form.Control>\r\n                </InputGroup>\r\n                \r\n                {/*core+distance*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ระยะทางโดยประมาณ(m)</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={distance}\r\n                  onChange={(e) => setdistance(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>จำนวน Core</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={core}\r\n                  onChange={(e) => setcore(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ถูกใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={use_core}\r\n                  onChange={(e) => setuse_core(e.target.value)}\r\n                />\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ยังไม่ได้ใช้งาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"number\" \r\n                  required \r\n                  value={notuse_core}\r\n                  onChange={(e) => setnotuse_core(e.target.value)}\r\n                />\r\n\r\n                </InputGroup>\r\n\r\n                {/*date+restname<DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />*/}\r\n                <InputGroup className=\"mb-3\" size=\"sm\" >\r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">วันที่ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>{/*\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={date}\r\n                  onChange={(e) => setdate(e.target.value)}\r\n                >\r\n\r\n                </FormControl>*/}<DatePicker selected={date} onChange={(date) => setdate(date)} />\r\n      \r\n                \r\n                \r\n                <InputGroup.Prepend size=\"sm\">\r\n                <InputGroup.Text size=\"sm\">ผู้ดำเนินงาน</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  type=\"string\" \r\n                  required \r\n                  value={person}\r\n                  onChange={(e) => setperson(e.target.value)}\r\n                  size=\"sm\"\r\n                />\r\n                </InputGroup>\r\n\r\n                {/*repair*/}\r\n                {/*<InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ประวัติการซ่อม</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  as=\"textarea\" \r\n                  aria-label=\"With textarea\" \r\n                  type=\"string\" \r\n                  required \r\n                  value={repair}\r\n                  onChange={(e) => setrepair(e.target.value)}\r\n                />\r\n                </InputGroup>*/}\r\n                {/*else*/}\r\n                <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                <InputGroup.Text>ข้อมูลเพิ่มเติม</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                  as=\"textarea\" \r\n                  aria-label=\"With textarea\" \r\n                  type=\"string\" \r\n                  required \r\n                  value={anyelse}\r\n                  onChange={(e) => setanyelse(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n                <Button type=\"submit\" onClick={handleSubmit} href=\"/insert\">เพิ่มรายการ</Button>\r\n            </form>\r\n            \r\n            <br></br>\r\n          \r\n            </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n          </Row>\r\n\r\n\r\n    </Container>\r\n    <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","/usr/app/src/components/headbar.js",["271","272","273","274","275"],"import { Navbar,Nav,Form,Button,FormControl,Card,NavDropdown } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Headbar = () => {\r\n  const history = useHistory()\r\n\r\n  /*const Gotlogout =()=>{\r\n    Axios.get(\"/logout\")\r\n    .then(\r\n      history.push({\r\n        pathname : '/login'\r\n      })\r\n    );\r\n  }*/\r\n\r\n  const Logout=()=> {\r\n    localStorage.clear();\r\n    window.location.href = '/login';\r\n}\r\n  \r\n  return (\r\n    <div className=\"App-main\">\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">KUfiber</Navbar.Brand>\r\n      <Nav className=\"mr-auto\" variant=\"pills\">\r\n      <Nav.Link href=\"/main\">About</Nav.Link>\r\n      <Nav.Link href=\"/list\">List</Nav.Link>\r\n      <Nav.Link href=\"/repairlist\">Repairlist</Nav.Link>\r\n      <Nav.Link href=\"/insert\"><Icon.PlusCircle/>{\" New\"}</Nav.Link>\r\n      <Nav.Link href=\"/addstation\"><Icon.PlusCircle/>{\" Addplace\"}</Nav.Link>\r\n      <Nav.Link href=\"/register\"><Icon.PlusCircle/>{\" register\"}</Nav.Link>\r\n      \r\n      </Nav>\r\n\r\n      <Form inline>\r\n      <Navbar.Brand></Navbar.Brand>\r\n      <Button variant=\"light\" \r\n              href=\"/login\" \r\n              size=\"sm\"\r\n              onClick={Logout}\r\n      >\r\n      <Icon.BoxArrowRight/></Button>\r\n      </Form>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Headbar;\r\n","/usr/app/src/components/bottom.js",["276","277","278","279","280","281","282","283"],"import { Navbar,Nav,Form,Button,FormControl,Card,NavDropdown } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport './style.css';\r\n\r\nconst Bottom = () => {\r\n  return (\r\n    <div>\r\n      <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottom;\r\n",{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"292","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"293","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":13},{"ruleId":"288","severity":1,"message":"294","line":16,"column":20,"nodeType":"290","messageId":"291","endLine":16,"endColumn":26},{"ruleId":"288","severity":1,"message":"295","line":22,"column":8,"nodeType":"290","messageId":"291","endLine":22,"endColumn":13},{"ruleId":"288","severity":1,"message":"296","line":1,"column":9,"nodeType":"290","messageId":"291","endLine":1,"endColumn":14},{"ruleId":"288","severity":1,"message":"297","line":1,"column":15,"nodeType":"290","messageId":"291","endLine":1,"endColumn":24},{"ruleId":"288","severity":1,"message":"298","line":1,"column":25,"nodeType":"290","messageId":"291","endLine":1,"endColumn":30},{"ruleId":"288","severity":1,"message":"299","line":1,"column":31,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"300","line":1,"column":38,"nodeType":"290","messageId":"291","endLine":1,"endColumn":41},{"ruleId":"288","severity":1,"message":"301","line":1,"column":42,"nodeType":"290","messageId":"291","endLine":1,"endColumn":46},{"ruleId":"288","severity":1,"message":"302","line":1,"column":89,"nodeType":"290","messageId":"291","endLine":1,"endColumn":103},{"ruleId":"288","severity":1,"message":"303","line":1,"column":104,"nodeType":"290","messageId":"291","endLine":1,"endColumn":112},{"ruleId":"288","severity":1,"message":"304","line":1,"column":113,"nodeType":"290","messageId":"291","endLine":1,"endColumn":119},{"ruleId":"288","severity":1,"message":"305","line":1,"column":120,"nodeType":"290","messageId":"291","endLine":1,"endColumn":126},{"ruleId":"288","severity":1,"message":"306","line":1,"column":127,"nodeType":"290","messageId":"291","endLine":1,"endColumn":136},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"308","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":20},{"ruleId":"288","severity":1,"message":"309","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":18,"column":5,"nodeType":"312","endLine":18,"endColumn":7,"suggestions":"313"},{"ruleId":"310","severity":1,"message":"314","line":26,"column":5,"nodeType":"312","endLine":26,"endColumn":7,"suggestions":"315"},{"ruleId":"288","severity":1,"message":"316","line":44,"column":9,"nodeType":"290","messageId":"291","endLine":44,"endColumn":12},{"ruleId":"288","severity":1,"message":"299","line":1,"column":33,"nodeType":"290","messageId":"291","endLine":1,"endColumn":39},{"ruleId":"288","severity":1,"message":"300","line":1,"column":40,"nodeType":"290","messageId":"291","endLine":1,"endColumn":43},{"ruleId":"288","severity":1,"message":"301","line":1,"column":44,"nodeType":"290","messageId":"291","endLine":1,"endColumn":48},{"ruleId":"288","severity":1,"message":"302","line":1,"column":91,"nodeType":"290","messageId":"291","endLine":1,"endColumn":105},{"ruleId":"288","severity":1,"message":"303","line":1,"column":106,"nodeType":"290","messageId":"291","endLine":1,"endColumn":114},{"ruleId":"288","severity":1,"message":"304","line":1,"column":115,"nodeType":"290","messageId":"291","endLine":1,"endColumn":121},{"ruleId":"288","severity":1,"message":"305","line":1,"column":122,"nodeType":"290","messageId":"291","endLine":1,"endColumn":128},{"ruleId":"288","severity":1,"message":"306","line":1,"column":129,"nodeType":"290","messageId":"291","endLine":1,"endColumn":138},{"ruleId":"288","severity":1,"message":"317","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":16},{"ruleId":"288","severity":1,"message":"318","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":14},{"ruleId":"310","severity":1,"message":"319","line":24,"column":5,"nodeType":"312","endLine":24,"endColumn":7,"suggestions":"320"},{"ruleId":"310","severity":1,"message":"314","line":32,"column":5,"nodeType":"312","endLine":32,"endColumn":7,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":116,"column":34,"nodeType":"324","messageId":"325","endLine":116,"endColumn":36},{"ruleId":"326","severity":1,"message":"327","line":117,"column":30,"nodeType":"328","messageId":"329","endLine":117,"endColumn":32},{"ruleId":"288","severity":1,"message":"299","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":20},{"ruleId":"288","severity":1,"message":"301","line":1,"column":21,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"330","line":1,"column":33,"nodeType":"290","messageId":"291","endLine":1,"endColumn":44},{"ruleId":"288","severity":1,"message":"302","line":1,"column":68,"nodeType":"290","messageId":"291","endLine":1,"endColumn":82},{"ruleId":"288","severity":1,"message":"303","line":1,"column":83,"nodeType":"290","messageId":"291","endLine":1,"endColumn":91},{"ruleId":"288","severity":1,"message":"304","line":1,"column":92,"nodeType":"290","messageId":"291","endLine":1,"endColumn":98},{"ruleId":"288","severity":1,"message":"305","line":1,"column":99,"nodeType":"290","messageId":"291","endLine":1,"endColumn":105},{"ruleId":"288","severity":1,"message":"306","line":1,"column":106,"nodeType":"290","messageId":"291","endLine":1,"endColumn":115},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":6,"column":17,"nodeType":"290","messageId":"291","endLine":6,"endColumn":25},{"ruleId":"288","severity":1,"message":"292","line":6,"column":27,"nodeType":"290","messageId":"291","endLine":6,"endColumn":36},{"ruleId":"288","severity":1,"message":"297","line":1,"column":21,"nodeType":"290","messageId":"291","endLine":1,"endColumn":30},{"ruleId":"288","severity":1,"message":"299","line":1,"column":43,"nodeType":"290","messageId":"291","endLine":1,"endColumn":49},{"ruleId":"288","severity":1,"message":"300","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":53},{"ruleId":"288","severity":1,"message":"301","line":1,"column":54,"nodeType":"290","messageId":"291","endLine":1,"endColumn":58},{"ruleId":"288","severity":1,"message":"302","line":1,"column":101,"nodeType":"290","messageId":"291","endLine":1,"endColumn":115},{"ruleId":"288","severity":1,"message":"303","line":1,"column":116,"nodeType":"290","messageId":"291","endLine":1,"endColumn":124},{"ruleId":"288","severity":1,"message":"304","line":1,"column":125,"nodeType":"290","messageId":"291","endLine":1,"endColumn":131},{"ruleId":"288","severity":1,"message":"305","line":1,"column":132,"nodeType":"290","messageId":"291","endLine":1,"endColumn":138},{"ruleId":"288","severity":1,"message":"306","line":1,"column":139,"nodeType":"290","messageId":"291","endLine":1,"endColumn":148},{"ruleId":"310","severity":1,"message":"319","line":23,"column":5,"nodeType":"312","endLine":23,"endColumn":7,"suggestions":"331"},{"ruleId":"322","severity":1,"message":"323","line":49,"column":35,"nodeType":"324","messageId":"325","endLine":49,"endColumn":37},{"ruleId":"326","severity":1,"message":"327","line":50,"column":20,"nodeType":"328","messageId":"329","endLine":50,"endColumn":22},{"ruleId":"322","severity":1,"message":"323","line":102,"column":47,"nodeType":"324","messageId":"325","endLine":102,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":103,"column":44,"nodeType":"328","messageId":"329","endLine":103,"endColumn":46},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":20},{"ruleId":"288","severity":1,"message":"301","line":2,"column":21,"nodeType":"290","messageId":"291","endLine":2,"endColumn":25},{"ruleId":"288","severity":1,"message":"332","line":2,"column":26,"nodeType":"290","messageId":"291","endLine":2,"endColumn":32},{"ruleId":"288","severity":1,"message":"330","line":2,"column":33,"nodeType":"290","messageId":"291","endLine":2,"endColumn":44},{"ruleId":"288","severity":1,"message":"302","line":2,"column":68,"nodeType":"290","messageId":"291","endLine":2,"endColumn":82},{"ruleId":"288","severity":1,"message":"303","line":2,"column":83,"nodeType":"290","messageId":"291","endLine":2,"endColumn":91},{"ruleId":"288","severity":1,"message":"304","line":2,"column":92,"nodeType":"290","messageId":"291","endLine":2,"endColumn":98},{"ruleId":"288","severity":1,"message":"305","line":2,"column":99,"nodeType":"290","messageId":"291","endLine":2,"endColumn":105},{"ruleId":"288","severity":1,"message":"306","line":2,"column":106,"nodeType":"290","messageId":"291","endLine":2,"endColumn":115},{"ruleId":"288","severity":1,"message":"307","line":3,"column":13,"nodeType":"290","messageId":"291","endLine":3,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":31,"column":1,"nodeType":"335","endLine":55,"endColumn":3},{"ruleId":"288","severity":1,"message":"296","line":1,"column":9,"nodeType":"290","messageId":"291","endLine":1,"endColumn":14},{"ruleId":"288","severity":1,"message":"298","line":1,"column":25,"nodeType":"290","messageId":"291","endLine":1,"endColumn":30},{"ruleId":"288","severity":1,"message":"299","line":1,"column":31,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"300","line":1,"column":38,"nodeType":"290","messageId":"291","endLine":1,"endColumn":41},{"ruleId":"288","severity":1,"message":"301","line":1,"column":42,"nodeType":"290","messageId":"291","endLine":1,"endColumn":46},{"ruleId":"288","severity":1,"message":"302","line":1,"column":89,"nodeType":"290","messageId":"291","endLine":1,"endColumn":103},{"ruleId":"288","severity":1,"message":"303","line":1,"column":104,"nodeType":"290","messageId":"291","endLine":1,"endColumn":112},{"ruleId":"288","severity":1,"message":"304","line":1,"column":113,"nodeType":"290","messageId":"291","endLine":1,"endColumn":119},{"ruleId":"288","severity":1,"message":"305","line":1,"column":120,"nodeType":"290","messageId":"291","endLine":1,"endColumn":126},{"ruleId":"288","severity":1,"message":"306","line":1,"column":127,"nodeType":"290","messageId":"291","endLine":1,"endColumn":136},{"ruleId":"288","severity":1,"message":"336","line":5,"column":22,"nodeType":"290","messageId":"291","endLine":5,"endColumn":31},{"ruleId":"310","severity":1,"message":"314","line":17,"column":5,"nodeType":"312","endLine":17,"endColumn":7,"suggestions":"337"},{"ruleId":"288","severity":1,"message":"300","line":1,"column":44,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"292","line":4,"column":27,"nodeType":"290","messageId":"291","endLine":4,"endColumn":36},{"ruleId":"288","severity":1,"message":"309","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":14},{"ruleId":"288","severity":1,"message":"338","line":12,"column":10,"nodeType":"290","messageId":"291","endLine":12,"endColumn":19},{"ruleId":"288","severity":1,"message":"339","line":12,"column":21,"nodeType":"290","messageId":"291","endLine":12,"endColumn":33},{"ruleId":"288","severity":1,"message":"340","line":16,"column":9,"nodeType":"290","messageId":"291","endLine":16,"endColumn":16},{"ruleId":"288","severity":1,"message":"341","line":1,"column":21,"nodeType":"290","messageId":"291","endLine":1,"endColumn":30},{"ruleId":"288","severity":1,"message":"342","line":1,"column":31,"nodeType":"290","messageId":"291","endLine":1,"endColumn":40},{"ruleId":"288","severity":1,"message":"343","line":1,"column":41,"nodeType":"290","messageId":"291","endLine":1,"endColumn":49},{"ruleId":"288","severity":1,"message":"297","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":59},{"ruleId":"288","severity":1,"message":"299","line":1,"column":72,"nodeType":"290","messageId":"291","endLine":1,"endColumn":78},{"ruleId":"288","severity":1,"message":"300","line":1,"column":79,"nodeType":"290","messageId":"291","endLine":1,"endColumn":82},{"ruleId":"288","severity":1,"message":"301","line":1,"column":83,"nodeType":"290","messageId":"291","endLine":1,"endColumn":87},{"ruleId":"288","severity":1,"message":"302","line":1,"column":130,"nodeType":"290","messageId":"291","endLine":1,"endColumn":144},{"ruleId":"288","severity":1,"message":"303","line":1,"column":145,"nodeType":"290","messageId":"291","endLine":1,"endColumn":153},{"ruleId":"288","severity":1,"message":"304","line":1,"column":154,"nodeType":"290","messageId":"291","endLine":1,"endColumn":160},{"ruleId":"288","severity":1,"message":"305","line":1,"column":161,"nodeType":"290","messageId":"291","endLine":1,"endColumn":167},{"ruleId":"288","severity":1,"message":"306","line":1,"column":168,"nodeType":"290","messageId":"291","endLine":1,"endColumn":177},{"ruleId":"288","severity":1,"message":"344","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":19},{"ruleId":"288","severity":1,"message":"345","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":13},{"ruleId":"288","severity":1,"message":"346","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":13},{"ruleId":"310","severity":1,"message":"347","line":25,"column":5,"nodeType":"312","endLine":25,"endColumn":7,"suggestions":"348"},{"ruleId":"310","severity":1,"message":"319","line":32,"column":5,"nodeType":"312","endLine":32,"endColumn":7,"suggestions":"349"},{"ruleId":"322","severity":1,"message":"323","line":174,"column":49,"nodeType":"324","messageId":"325","endLine":174,"endColumn":51},{"ruleId":"326","severity":1,"message":"327","line":175,"column":43,"nodeType":"328","messageId":"329","endLine":175,"endColumn":45},{"ruleId":"288","severity":1,"message":"299","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":20},{"ruleId":"288","severity":1,"message":"302","line":1,"column":68,"nodeType":"290","messageId":"291","endLine":1,"endColumn":82},{"ruleId":"288","severity":1,"message":"303","line":1,"column":83,"nodeType":"290","messageId":"291","endLine":1,"endColumn":91},{"ruleId":"288","severity":1,"message":"304","line":1,"column":92,"nodeType":"290","messageId":"291","endLine":1,"endColumn":98},{"ruleId":"288","severity":1,"message":"305","line":1,"column":99,"nodeType":"290","messageId":"291","endLine":1,"endColumn":105},{"ruleId":"288","severity":1,"message":"306","line":1,"column":106,"nodeType":"290","messageId":"291","endLine":1,"endColumn":115},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"297","line":1,"column":21,"nodeType":"290","messageId":"291","endLine":1,"endColumn":30},{"ruleId":"288","severity":1,"message":"299","line":1,"column":43,"nodeType":"290","messageId":"291","endLine":1,"endColumn":49},{"ruleId":"288","severity":1,"message":"300","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":53},{"ruleId":"288","severity":1,"message":"301","line":1,"column":54,"nodeType":"290","messageId":"291","endLine":1,"endColumn":58},{"ruleId":"288","severity":1,"message":"302","line":1,"column":101,"nodeType":"290","messageId":"291","endLine":1,"endColumn":115},{"ruleId":"288","severity":1,"message":"303","line":1,"column":116,"nodeType":"290","messageId":"291","endLine":1,"endColumn":124},{"ruleId":"288","severity":1,"message":"304","line":1,"column":125,"nodeType":"290","messageId":"291","endLine":1,"endColumn":131},{"ruleId":"288","severity":1,"message":"305","line":1,"column":132,"nodeType":"290","messageId":"291","endLine":1,"endColumn":138},{"ruleId":"288","severity":1,"message":"306","line":1,"column":139,"nodeType":"290","messageId":"291","endLine":1,"endColumn":148},{"ruleId":"288","severity":1,"message":"309","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":14},{"ruleId":"288","severity":1,"message":"350","line":12,"column":10,"nodeType":"290","messageId":"291","endLine":12,"endColumn":17},{"ruleId":"288","severity":1,"message":"351","line":12,"column":19,"nodeType":"290","messageId":"291","endLine":12,"endColumn":29},{"ruleId":"288","severity":1,"message":"340","line":13,"column":9,"nodeType":"290","messageId":"291","endLine":13,"endColumn":16},{"ruleId":"310","severity":1,"message":"352","line":22,"column":5,"nodeType":"312","endLine":22,"endColumn":7,"suggestions":"353"},{"ruleId":"322","severity":1,"message":"323","line":42,"column":34,"nodeType":"324","messageId":"325","endLine":42,"endColumn":36},{"ruleId":"326","severity":1,"message":"327","line":43,"column":20,"nodeType":"328","messageId":"329","endLine":43,"endColumn":22},{"ruleId":"322","severity":1,"message":"323","line":89,"column":46,"nodeType":"324","messageId":"325","endLine":89,"endColumn":48},{"ruleId":"326","severity":1,"message":"327","line":90,"column":44,"nodeType":"328","messageId":"329","endLine":90,"endColumn":46},{"ruleId":"288","severity":1,"message":"299","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":20},{"ruleId":"288","severity":1,"message":"302","line":1,"column":68,"nodeType":"290","messageId":"291","endLine":1,"endColumn":82},{"ruleId":"288","severity":1,"message":"303","line":1,"column":83,"nodeType":"290","messageId":"291","endLine":1,"endColumn":91},{"ruleId":"288","severity":1,"message":"304","line":1,"column":92,"nodeType":"290","messageId":"291","endLine":1,"endColumn":98},{"ruleId":"288","severity":1,"message":"305","line":1,"column":99,"nodeType":"290","messageId":"291","endLine":1,"endColumn":105},{"ruleId":"288","severity":1,"message":"306","line":1,"column":106,"nodeType":"290","messageId":"291","endLine":1,"endColumn":115},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"308","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":20},{"ruleId":"310","severity":1,"message":"354","line":17,"column":6,"nodeType":"312","endLine":17,"endColumn":8,"suggestions":"355"},{"ruleId":"288","severity":1,"message":"299","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":20},{"ruleId":"288","severity":1,"message":"301","line":1,"column":21,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"332","line":1,"column":26,"nodeType":"290","messageId":"291","endLine":1,"endColumn":32},{"ruleId":"288","severity":1,"message":"330","line":1,"column":33,"nodeType":"290","messageId":"291","endLine":1,"endColumn":44},{"ruleId":"288","severity":1,"message":"356","line":1,"column":45,"nodeType":"290","messageId":"291","endLine":1,"endColumn":49},{"ruleId":"288","severity":1,"message":"357","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":61},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"309","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"308","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":20},{"ruleId":"288","severity":1,"message":"299","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":20},{"ruleId":"288","severity":1,"message":"302","line":1,"column":68,"nodeType":"290","messageId":"291","endLine":1,"endColumn":82},{"ruleId":"288","severity":1,"message":"303","line":1,"column":83,"nodeType":"290","messageId":"291","endLine":1,"endColumn":91},{"ruleId":"288","severity":1,"message":"304","line":1,"column":92,"nodeType":"290","messageId":"291","endLine":1,"endColumn":98},{"ruleId":"288","severity":1,"message":"305","line":1,"column":99,"nodeType":"290","messageId":"291","endLine":1,"endColumn":105},{"ruleId":"288","severity":1,"message":"306","line":1,"column":106,"nodeType":"290","messageId":"291","endLine":1,"endColumn":115},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"308","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":20},{"ruleId":"288","severity":1,"message":"336","line":5,"column":22,"nodeType":"290","messageId":"291","endLine":5,"endColumn":31},{"ruleId":"288","severity":1,"message":"358","line":22,"column":18,"nodeType":"290","messageId":"291","endLine":22,"endColumn":27},{"ruleId":"310","severity":1,"message":"314","line":32,"column":5,"nodeType":"312","endLine":32,"endColumn":7,"suggestions":"359"},{"ruleId":"288","severity":1,"message":"360","line":51,"column":10,"nodeType":"290","messageId":"291","endLine":51,"endColumn":19},{"ruleId":"288","severity":1,"message":"361","line":51,"column":21,"nodeType":"290","messageId":"291","endLine":51,"endColumn":33},{"ruleId":"288","severity":1,"message":"330","line":1,"column":33,"nodeType":"290","messageId":"291","endLine":1,"endColumn":44},{"ruleId":"288","severity":1,"message":"356","line":1,"column":45,"nodeType":"290","messageId":"291","endLine":1,"endColumn":49},{"ruleId":"288","severity":1,"message":"357","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":61},{"ruleId":"288","severity":1,"message":"309","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"340","line":9,"column":9,"nodeType":"290","messageId":"291","endLine":9,"endColumn":16},{"ruleId":"288","severity":1,"message":"299","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":16},{"ruleId":"288","severity":1,"message":"300","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":20},{"ruleId":"288","severity":1,"message":"301","line":1,"column":21,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"332","line":1,"column":26,"nodeType":"290","messageId":"291","endLine":1,"endColumn":32},{"ruleId":"288","severity":1,"message":"330","line":1,"column":33,"nodeType":"290","messageId":"291","endLine":1,"endColumn":44},{"ruleId":"288","severity":1,"message":"356","line":1,"column":45,"nodeType":"290","messageId":"291","endLine":1,"endColumn":49},{"ruleId":"288","severity":1,"message":"357","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":61},{"ruleId":"288","severity":1,"message":"307","line":2,"column":13,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Login' is defined but never used.","'Router' is defined but never used.","'Hello' is defined but never used.","'Toast' is defined but never used.","'ListGroup' is defined but never used.","'Modal' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Form' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Select' is defined but never used.","'Option' is defined but never used.","'Jumbotron' is defined but never used.","'Icon' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'mystation'. Either include them or remove the dependency array.","ArrayExpression",["364"],"React Hook useEffect has a missing dependency: 'station'. Either include it or remove the dependency array.",["365"],"'Del' is assigned a value but never used.","'Filldata' is defined but never used.","'Bottom' is defined but never used.","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["366"],["367"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControl' is defined but never used.",["368"],"'Button' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useParams' is defined but never used.",["369"],"'regstatus' is assigned a value but never used.","'setregstatus' is assigned a value but never used.","'history' is assigned a value but never used.","'Accordion' is defined but never used.","'CardGroup' is defined but never used.","'Carousel' is defined but never used.","'UploadFiles' is defined but never used.","'test1' is defined but never used.","'test2' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'product'. Either include them or remove the dependency array.",["370"],["371"],"'product' is assigned a value but never used.","'setProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'repair'. Either include it or remove the dependency array.",["372"],"React Hook useEffect has missing dependencies: 'getProduct' and 'getStation'. Either include them or remove the dependency array.",["373"],"'Card' is defined but never used.","'NavDropdown' is defined but never used.","'setrepair' is assigned a value but never used.",["374"],"'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"377","fix":"381"},{"desc":"379","fix":"382"},{"desc":"377","fix":"383"},{"desc":"384","fix":"385"},{"desc":"379","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"377","fix":"391"},"Update the dependencies array to be: [id, mystation]",{"range":"392","text":"393"},"Update the dependencies array to be: [station]",{"range":"394","text":"395"},"Update the dependencies array to be: [product]",{"range":"396","text":"397"},{"range":"398","text":"395"},{"range":"399","text":"397"},{"range":"400","text":"395"},"Update the dependencies array to be: [id, product]",{"range":"401","text":"402"},{"range":"403","text":"397"},"Update the dependencies array to be: [repair]",{"range":"404","text":"405"},"Update the dependencies array to be: [getProduct, getStation]",{"range":"406","text":"407"},{"range":"408","text":"395"},[722,724],"[id, mystation]",[930,932],"[station]",[865,867],"[product]",[1029,1031],[817,819],[701,703],[974,976],"[id, product]",[1124,1126],[811,813],"[repair]",[633,635],"[getProduct, getStation]",[1311,1313]]